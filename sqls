USE [eMedSuiteProd]
GO
/****** Object:  StoredProcedure [dbo].[usp_MHSI_Census_Daily_Report_Summary]    Script Date: 08/16/2024 11:15:43 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Created by: Franz Patricio - SDS
-- Date Created: 11/06/2023
-- Description/Purpose: Daily Census Report Automation Phase 5.0
-- Line Affected/Updated: ALL LINES
-- Request ID: 
-- Remarks: Please don't remove all commented lines. Thank you! :D

-- Created by: Franz Patricio - SDS
-- Date Created: 05/07/2024
-- Description/Purpose: Update Daily Summary Script
-- Line Affected/Updated: ALL LINES WITH ('422','475','476','477','478','479')
-- Request ID: 

-- Modified by: Leo Ignacio - BSDevTeam1
-- Date Created: 08/16/2024
-- Description/Purpose:
-- Line Affected/Updated: 
-- Request ID: 
-- =============================================
BEGIN

	DROP TABLE IF EXISTS
	#TEMP_BRANCH,#TEMP_tbl_MHSI_Scorecard_Availments,#TEMP_tbl_MHSI_Scorecard_AccountType,#TEMP_AVAILMENTS_ACCOUNTTYPE,#TEMP_AVAILMENTS_SPECIALTY,
	#TEMP_NEARBYRATE,#TEMP_WEEKLYTARGET,#TEMP_WEEKLYTARGET_FINAL,#TEMP_ITEMCLASS,#TEMP_WEEKLYTARGET_FINAL_EXCLUSIVE,
	#TEMP_BRANCH_ITEMCLASS,#TEMP_tbl_MHSI_Scorecard_Availers,#TEMP_AVAILERS_ACCOUNTTYPE,#TEMP_AVAILERS_SPECIALTY,#TEMP_AVAILER_CURRWK,
	#TEMP_AVAILER_CURRWK_SUBTOTAL,#TEMP_AVAILER_CURRWK_FINAL,#TEMP_AVAILMENT_CURRENTWK_PRE_INCLUSIVE,#TEMP_AVAILMENT_CURRENTWK_PRE_EXCLUSIVE,#TEMP_AVAILMENT_CURRENTWK_INC,
	#TEMP_AVAILMENT_CURRENTWK_EXC,#TEMP_AVAILMENT_CURRENTWK_FINAL_INC,#TEMP_AVAILMENT_CURRENTWK_FINAL_EXC,#TEMP_CURRENT_WEEK_INC,#TEMP_CURRENT_WEEK_EXC,
	#TEMP_AVAILER_MTD,#TEMP_AVAILER_MTD_SUBTOTAL,#TEMP_AVAILER_MTD_FINAL,#TEMP_AVAILMENT_MTD_PRE_INCLUSIVE,#TEMP_AVAILMENT_MTD_PRE_EXCLUSIVE,
	#TEMP_AVAILMENT_MTD_INC,#TEMP_AVAILMENT_MTD_EXC,#TEMP_AVAILMENT_MTD_FINAL_INC,#TEMP_AVAILMENT_MTD_FINAL_EXC,#TEMP_MTD_INCLUSIVE,
	#TEMP_MTD_EXCLUSIVE,#TEMP_MTD, #TEMP_DATA_PRE,#TEMP_ACTUAL_CAPACITY, #TEMP_PCC_PRICING,
	#TBL_MHSI_Census_Daily_Report_Summary, 
	#TEMP_AVAILERS, #tbl_MHSI_Scorecard_Availers, #tbl_MHSI_Scorecard_Availments, #TEMP_AVAILMENTS, #TEMP_AVAILERS

	
	DECLARE @MONTH INT,
			@YEAR VARCHAR(10),
			@DATETODAY DATETIME,
			@MONTHNAME VARCHAR(10),
			@NOOFDAYS INT,
			@WMOTHFROM	DATETIME,
			@WMOTHTO	DATETIME,
			@DATEFROM	DATETIME,
			@DATETO		DATETIME,
			@CURRWEEK	VARCHAR(50),
			@WEEKCOUNT	INT,
			@MONTHRANGE VARCHAR(50),
			@SPNAME VARCHAR(300),
			@CURRDAY INT

	--SET @DATETODAY = DATEADD(DAY, -1,GETDATE()) 
	SET @DATETODAY = DATEADD(DAY, -1, '06/13/2024') 
	SET @MONTH = MONTH(@DATETODAY) 
	SET @YEAR = YEAR(@DATETODAY) 
	SET @MONTHNAME = DATENAME(MONTH,@DATETODAY) 
	SET @WMOTHFROM= DATEADD(MONTH, DATEDIFF(MONTH, 0, @DATETODAY), 0) 
	SET @WMOTHTO= DATEADD(d, -1, DATEADD(m, DATEDIFF(m, 0, @DATETODAY) + 1, 0)) 
	SET @DATEFROM =CONVERT(DATETIME,CONVERT(VARCHAR(10),@DATETODAY-6,101)) 	
	SET @DATETO =CONVERT(DATETIME,CONVERT(VARCHAR(10),@DATETODAY-0,101)) 
	SET @CURRWEEK=CONVERT(VARCHAR(200),CONVERT(VARCHAR(20), @DATEFROM, 107) + ' To ' + CONVERT(VARCHAR(20), @DATETO, 107),150)
	SET @NOOFDAYS = DATEPART(DAY,@WMOTHTO) 
	SET @CURRDAY = DATEPART(DAY,@DATETO) 
	SET @WEEKCOUNT=  DATEPART(WEEK, @DATETODAY-1) 
	SET @MONTHRANGE = CONVERT(VARCHAR(200),CONVERT(VARCHAR(20), @WMOTHFROM, 107) + ' To ' + CONVERT(VARCHAR(20), @DATETODAY, 107),150)

	CREATE TABLE #tbl_MHSI_Scorecard_Availers 
	([DATETIMEQUEUED] [datetime] NULL , 
	 [trxnnumber] [varchar](150) NULL  , 
	 [BRANCHNAME] [varchar](500) NULL  , 
	 [ItemClass] [varchar](150) NULL  , 
	 [TRANSACTIONTYPE] [varchar](150) NULL  , 
	 [PackageNumber] [varchar](150) NULL  , 
	 [ProcedureName] [varchar](500) NULL  , 
	 [ItemNumber] [varchar](150) NULL  , 
	 [SPECIALTY] [varchar](500) NULL  , 
	 [CPTCODE] [varchar](150) NULL  , 
	 [PRICE] [numeric](19, 5) NULL  , 
	 [PATIENTNUMBER] [varchar](150) NULL  ,
	 [CARDNUMBER] [varchar](150) NULL  , 
	 [PLANID] [varchar](150) NULL  , 
	 [PLANDESC] [varchar](500) NULL  , 
	 [FUNDINGMGNT] [varchar](10) NULL  ,  --SDS1
	 [DATETIMEDONE] [datetime] NULL  , 
	 [CATEGORY] [varchar](150) NULL  ,
	 [MONTH] [varchar](10) NULL  , 
	 [YEAR] [varchar](10) NULL  , 
	 [SYSTEMDATE] [datetime] NULL  
	 )

	CREATE TABLE #tbl_MHSI_Scorecard_Availments 
	([DATETIMEQUEUED] [datetime] NULL, 
	[trxnnumber] [varchar](150) NULL, 
	[BRANCHNAME] [varchar](500) NULL, 
	[ItemClass] [varchar](150) NULL, 
	[TRANSACTIONTYPE] [varchar](150) NULL, 
	[PackageNumber] [varchar](150) NULL, 
	[PackageRate] [numeric](19, 5) NULL, 
	[ProcedureName] [varchar](500) NULL, 
	[ItemNumber] [varchar](150) NULL, 
	[SPECIALTY] [varchar](500) NULL, 
	[CPTCODE] [varchar](150) NULL, 
	[PRICE] [numeric](19, 5) NULL, 
	[CARDNUMBER] [varchar](150) NULL, 
	[PLANID] [varchar](150) NULL, 
	[PLANDESC] [varchar](500) NULL, 
	[FUNDINGMGNT] [varchar](10) NULL, --SDS1
	[DATETIMEDONE] [datetime] NULL, 
	[CATEGORY] [varchar](150) NULL, 
	[MONTH] [varchar](10) NULL, 
	[YEAR] [varchar](10) NULL,
	[SYSTEMDATE] [datetime] NULL)

	CREATE TABLE #TEMP_AVAILERS
		(DATETIMEQUEUED DATETIME,
		trxnnumber VARCHAR(150),
		BRANCHNAME VARCHAR(500),
		ItemClass VARCHAR(150),
		TRANSACTIONTYPE VARCHAR(150),
		PackageNumber VARCHAR(150),
		ProcedureName VARCHAR(500),
		ItemNumber VARCHAR(150),
		SPECIALTY VARCHAR(500),
		CPTCODE VARCHAR(150),
		PRICE NUMERIC(19,5),
		PATIENTNUMBER VARCHAR(150),
		CARDNUMBER VARCHAR(150),
		PLANID VARCHAR(150),
		PLANDESC VARCHAR(500),
		DATETIMEDONE DATETIME,
		CATEGORY VARCHAR(150)
		,BRANCHNUMBER INT, --01172024
		FUNDINGMGNT VARCHAR(10)) --08192024

	CREATE TABLE #TBL_MHSI_Census_Daily_Report_Summary (
		[ROWID] [int] IDENTITY(1,1) NOT NULL,
		[BRANCHNAME] [varchar](300) NULL,
		[ITEMCLASS] [varchar](200) NULL,
		[CONSIDEREDAS] [varchar](200) NULL,
		[AVAILMENTS_CENSUS_FULLRISK] [VARCHAR](250) NULL,
		[AVAILMENTS_CENSUS_ASO] [VARCHAR](250) NULL,
		[AVAILMENTS_CENSUS_NULL] [VARCHAR](250) NULL,
		[AVAILERS_CENSUS_FULLRISK] [VARCHAR](250) NULL,
		[AVAILERS_CENSUS_ASO] [VARCHAR](250) NULL,
		[AVAILERS_CENSUS_NULL] [VARCHAR](250) NULL,
		[CENSUS_INC] [int] NULL,
		[CENSUS_EXC] [int] NULL,
		[NONPRIMA] [int] NULL,
		[PRIMASILVER] [int] NULL,
		[PRIMAGOLD] [int] NULL,
		[FREQUENCY_TARGET] [numeric](19, 5) NULL,
		[ACTUAL_CAPACITY] [numeric](19, 5) NULL,
		[MAX_CAPACITY] [int] NULL,
		[ACTUAL_BASED_ON_MAX_CAP_PERCENT] [numeric](19, 5) NULL,
		[TOTAL_MYH_RATE_INC_MTD] [int] NULL,
		[TOTAL_MYH_RATE_PRIMA] [int] NULL,
		[TOTAL_MYH_RATE_EXC_MTD] [int] NULL,
		[TOTAL_NEARBY_RATE_INC_MTD] [numeric](19, 5) NULL,
		[TOTAL_NEARBY_RATE_PRIMA] [numeric](19, 5) NULL,
		[TOTAL_NEARBY_RATE_EXC_MTD] [numeric](19, 5) NULL,
		[TOTAL_COST_WITHOUT_MARKUP_INC_MTD] [numeric](19, 5) NULL,
		[TOTAL_COST_WITHOUT_MARKUP_PRIMA] [numeric](19, 5) NULL,
		[TOTAL_COST_WITHOUT_MARKUP_EXC_MTD] [numeric](19, 5) NULL,
		[NOOFDAYS] [int] NULL,
		[MONTH_NAME] [varchar](10) NULL,
		[CURRENT_DAY] [int] NULL,
		[CURRWKHEADER] [varchar](50) NULL,
		[MTD_HEADER] [varchar](50) NULL,
		[DATE_TODAY] [datetime] NULL,
		[WEEK_COUNT] [int] NULL,
		[REPORT_YEAR] [int] NULL,
		[SYSTEMDATE] [datetime] NULL
	)

	INSERT INTO #TEMP_AVAILERS
		(DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		PackageNumber,
		ProcedureName,
		ItemNumber,
		SPECIALTY,
		CPTCODE,
		PRICE,
		PATIENTNUMBER,
		CARDNUMBER,
		PLANID,
		PLANDESC,
		DATETIMEDONE,
		CATEGORY
		,BRANCHNUMBER --01172024
		,FUNDINGMGNT) --08192024
	SELECT 
		CONVERT(DATETIME,CONVERT(VARCHAR(10),E.DateTimeDone,101)) AS DATETIMEQUEUED,
		c.headernumber as trxnnumber,
		B.BRANCHNAME,
		ItemClass,
		W.TRANSACTIONTYPE,
		W.PackageNumber,
		ProcedureName,
		E.ItemNumber,
		'' AS SPECIALTY, 
		F.CPTCODE,
		CASE WHEN W.TransactionType IN ('ACU','ECU') THEN K.PackagePrice ELSE G.PRICE END AS PRICE,
		--G.PRICE,
		a.patientnumber,
		H.CARDNUMBER,
		I.PLANID,
		I.PLANDESC,
		e.datetimedone as DATETIMEDONE,
		'PROCEDURE'
		,B.BRANCHNUMBER, --01172024
		I.FUNDINGMGNT --08192024
	FROM eMedSuiteProd.dbo.[tblPatientVisit] AS A WITH (NOLOCK)
	LEFT JOIN eMedSuiteProd.dbo.refbranch AS B WITH (NOLOCK) ON A.BRANCHNUMBER = B.BRANCHNUMBER AND B.CLIENTNUMBER = '144'
	INNER JOIN eMedSuiteProd.dbo.tblPatientProcedureHeader AS C WITH (NOLOCK) ON A.VISITNUMBER = C.VISITNUMBER
	LEFT JOIN eMedSuiteProd.dbo.tblACUPatient AS W WITH (NOLOCK) ON C.HEADERNUMBER = W.HEADERNUMBER
	INNER JOIN eMedSuiteProd.dbo.tblPatientProcedureDetails AS D WITH (NOLOCK) ON C.HEADERNUMBER = D.HEADERNUMBER
	INNER JOIN eMedSuiteProd.dbo.tblPatientProcedureDetailsMYH AS E WITH (NOLOCK) ON D.DetailsNumber = E.DETAILNUMBER
	LEFT JOIN eMedSuiteProd.dbo.refProcedureSAPCC as F with(NOLOCK) on F.ProcedureNumber = e.ItemNumber
	LEFT JOIN eMedSuiteProd.dbo.refCPTCodes as G WITH(NOLOCK) on g.CPTCode = f.CPTCode
	LEFT JOIN eMedSuiteProd.dbo.TBLREGISTRATIONMYH as H with (nolock) on H.VISITNUMBER = A.VisitNumber
	LEFT JOIN [172.16.20.65].[CONSO_STAGING].[dbo].[Members_Masterlist] AS I  with (nolock)  ON REPLACE(I.CARDNO,' ','') COLLATE Latin1_General_CI_AS  = H.CARDNUMBER and I.CARDNO <> '' and I.CARDNO <> '0' 
	LEFT JOIN eMedSuiteProd.dbo.refPackagePriceSAPCC K WITH(NOLOCK) ON K.PackageNumber = W.PackageNumber
	WHERE B.ClientNumber = '144' 
	AND E.Status = 'DONE' 
	AND CONVERT(DATE,e.datetimedone) = @DATETODAY

	UNION ALL
	
	SELECT 
		CONVERT(DATETIME,CONVERT(VARCHAR(10),C.DateTimeEndProcess,101)) AS DATETIMEQUEUED,
		consultationnumber as trxnnumber,
		B.BRANCHNAME,
		'CONSULT' AS ITEMCLASS,
		'' AS TRANSACTIONTYPE, 
		'' AS PackageNumber,
		'CONSULTATION' AS [PROCEDURE],
		'' AS ItemNumber,
		SPECIALTY, 
		G.CPTCode,
		G.Price,
		a.patientnumber,
		H.CARDNUMBER,
		I.PLANID,
		I.PLANDESC,
		C.DateTimeEndProcess as DATETIMEDONE,
		'CONSULT'
		,B.BRANCHNUMBER, --01172024
		I.FUNDINGMGNT --08192024
	FROM eMedSuiteProd.dbo.[tblPatientVisit] AS A WITH (NOLOCK)
	LEFT JOIN eMedSuiteProd.dbo.refbranch AS B WITH (NOLOCK) ON A.BRANCHNUMBER = B.BRANCHNUMBER 
	INNER JOIN eMedSuiteProd.dbo.tblPatientConsultation AS C WITH (NOLOCK) ON A.VISITNUMBER = C.VISITNUMBER
	LEFT JOIN eMedSuiteProd.dbo.refCPTCodes as G with(nolock) on g.CPTCode='CONSULT'
	LEFT JOIN eMedSuiteProd.dbo.TBLREGISTRATIONMYH as H with (nolock) on H.VISITNUMBER = A.VisitNumber
	LEFT JOIN eMedSuiteProd.dbo.TBLPHYSICIAN AS W WITH (NOLOCK) ON C.USERNUMBER = W.PHYSICIANNUMBER
	LEFT JOIN [172.16.20.65].[CONSO_STAGING].[dbo].[Members_Masterlist] AS I  with (nolock)  ON REPLACE(I.CARDNO,' ','') COLLATE Latin1_General_CI_AS  = H.CARDNUMBER and I.CARDNO <> '' and I.CARDNO <> '0' 
	WHERE CONVERT(DATE,C.DateTimeEndProcess) = @DATETODAY
    AND B.ClientNumber = '144' 
	AND C.Status = 'CLOSED'

	INSERT INTO #tbl_MHSI_Scorecard_Availers
		([DATETIMEQUEUED]
      ,[trxnnumber]
      ,[BRANCHNAME]
      ,[ItemClass]
      ,[TRANSACTIONTYPE]
	  ,[PackageNumber]
      ,[ProcedureName]
      ,[ItemNumber]
      ,[SPECIALTY]
      ,[CPTCODE]
      ,[PRICE]
      ,[PATIENTNUMBER]
      ,[CARDNUMBER]
      ,[PLANID]
      ,[PLANDESC]
	  ,[FUNDINGMGNT]
      ,[DATETIMEDONE]
      ,[CATEGORY]
      ,[MONTH]
      ,[YEAR]
      ,[SYSTEMDATE]
	  )

	SELECT 
		DATETIMEQUEUED,
		trxnnumber,
		CONVERT(VARCHAR(10),BRANCHNUMBER) AS BRANCHNAME,  --01172024
		ItemClass,
		TRANSACTIONTYPE,
		PackageNumber,
		ProcedureName,
		ItemNumber,
		SPECIALTY,
		CPTCODE,
		PRICE,
		PATIENTNUMBER,
		CARDNUMBER,
		PLANID,
		PLANDESC,
		FUNDINGMGNT,  --SDS1
		DATETIMEDONE,
		CATEGORY,
		@MONTHNAME,
		@YEAR,
		GETDATE()
	FROM #TEMP_AVAILERS WITH(NOLOCK)
	WHERE BranchName <> 'TEST MAXICARE BRANCH'

	
	CREATE TABLE #TEMP_AVAILMENTS
		(DATETIMEQUEUED DATETIME,
		trxnnumber VARCHAR(150),
		BRANCHNAME VARCHAR(500),
		ItemClass VARCHAR(150),
		TRANSACTIONTYPE VARCHAR(150),
		PackageNumber VARCHAR(150),
		[PackageRate] NUMERIC(19,5),
		ProcedureName VARCHAR(500),
		ItemNumber VARCHAR(150),
		SPECIALTY VARCHAR(500),
		CPTCODE VARCHAR(150),
		PRICE NUMERIC(19,5),
		CARDNUMBER VARCHAR(150),
		PLANID VARCHAR(150),
		PLANDESC VARCHAR(500),
		DATETIMEDONE DATETIME,
		CATEGORY VARCHAR(150)
		,BRANCHNUMBER INT, --01172024
		FUNDINGMGNT VARCHAR(10)) --08192024
	
	INSERT INTO #TEMP_AVAILMENTS
		(DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		PackageNumber,
		[PackageRate],
		ProcedureName,
		ItemNumber,
		SPECIALTY,
		CPTCODE,
		PRICE,
		CARDNUMBER,
		PLANID,
		PLANDESC,
		DATETIMEDONE,
		CATEGORY
		,BRANCHNUMBER --01172024
		,FUNDINGMGNT) --08192024
	SELECT 
		CONVERT(DATETIME,CONVERT(VARCHAR(10),E.DateTimeDone,101)) AS DATETIMEQUEUED,
		c.headernumber as trxnnumber,
		B.BRANCHNAME,
		ItemClass,
		W.TRANSACTIONTYPE,
		W.PackageNumber,
		K.PackagePrice,
		D.ProcedureName,
		E.ItemNumber,
		'' AS SPECIALTY, 
		F.CPTCODE,
		G.PRICE,
		H.CARDNUMBER,
		I.PLANID,
		I.PLANDESC,
		e.datetimedone as DATETIMEDONE,
		'PROCEDURE'
		,B.BRANCHNUMBER, --01172024
		I.FUNDINGMGNT --08192024
	FROM eMedSuiteProd.dbo.[tblPatientVisit] AS A WITH (NOLOCK)
	LEFT JOIN eMedSuiteProd.dbo.refbranch AS B WITH (NOLOCK) ON A.BRANCHNUMBER = B.BRANCHNUMBER AND B.CLIENTNUMBER = '144'
	INNER JOIN eMedSuiteProd.dbo.tblPatientProcedureHeader AS C WITH (NOLOCK) ON A.VISITNUMBER = C.VISITNUMBER
	LEFT JOIN eMedSuiteProd.dbo.tblACUPatient AS W WITH (NOLOCK) ON C.HEADERNUMBER = W.HEADERNUMBER
	INNER JOIN eMedSuiteProd.dbo.tblPatientProcedureDetails AS D WITH (NOLOCK) ON C.HEADERNUMBER = D.HEADERNUMBER
	INNER JOIN eMedSuiteProd.dbo.tblPatientProcedureDetailsMYH AS E WITH (NOLOCK) ON D.DetailsNumber = E.DETAILNUMBER
	LEFT JOIN eMedSuiteProd.dbo.refProcedureSAPCC as F with(NOLOCK) on F.ProcedureNumber = e.ItemNumber
	LEFT JOIN eMedSuiteProd.dbo.refCPTCodes as G WITH(NOLOCK) on g.CPTCode = f.CPTCode
	LEFT JOIN eMedSuiteProd.dbo.TBLREGISTRATIONMYH as H with (nolock) on H.VISITNUMBER = A.VisitNumber
	LEFT JOIN [172.16.20.65].[CONSO_STAGING].[dbo].[Members_Masterlist] AS I  with (nolock)  ON REPLACE(I.CARDNO,' ','') COLLATE Latin1_General_CI_AS  = H.CARDNUMBER 
															and I.CARDNO <> '' and I.CARDNO <> '0' 
	LEFT JOIN eMedSuiteProd.dbo.refPackagePriceSAPCC K WITH(NOLOCK) ON K.PackageNumber = W.PackageNumber
	WHERE B.ClientNumber = '144' 
	AND E.Status = 'DONE' 
	AND CONVERT(DATE,e.datetimedone) = @DATETODAY

	UNION ALL

	SELECT 
		CONVERT(DATETIME,CONVERT(VARCHAR(10),C.DateTimeEndProcess,101)) AS DATETIMEQUEUED,
		consultationnumber as trxnnumber,
		B.BRANCHNAME,
		'CONSULT' AS ITEMCLASS,
		'' AS TRANSACTIONTYPE,
		'' AS PackageNumber,
		0 AS [PackageRate],
		'CONSULTATION' AS [PROCEDURE],
		'' AS ItemNumber,
		SPECIALTY, 
		G.CPTCode,
		G.Price,
		H.CARDNUMBER,
		I.PLANID,
		I.PLANDESC,
		C.DateTimeEndProcess as DATETIMEDONE,
		'CONSULT'
		,B.BRANCHNUMBER, --01172024
		I.FUNDINGMGNT --08192024
	FROM eMedSuiteProd.dbo.[tblPatientVisit] AS A WITH (NOLOCK)
	LEFT JOIN eMedSuiteProd.dbo.refbranch AS B WITH (NOLOCK) ON A.BRANCHNUMBER = B.BRANCHNUMBER 
	INNER JOIN eMedSuiteProd.dbo.tblPatientConsultation AS C WITH (NOLOCK) ON A.VISITNUMBER = C.VISITNUMBER
	LEFT JOIN eMedSuiteProd.dbo.refCPTCodes as G with(nolock) on g.CPTCode='CONSULT'
	LEFT JOIN eMedSuiteProd.dbo.TBLREGISTRATIONMYH as H with (nolock) on H.VISITNUMBER = A.VisitNumber
	LEFT JOIN eMedSuiteProd.dbo.TBLPHYSICIAN AS W WITH (NOLOCK) ON C.USERNUMBER = W.PHYSICIANNUMBER
	LEFT JOIN [172.16.20.65].[CONSO_STAGING].[dbo].[Members_Masterlist] AS I  with (nolock)  ON REPLACE(I.CARDNO,' ','') COLLATE Latin1_General_CI_AS  = H.CARDNUMBER and I.CARDNO <> '' and I.CARDNO <> '0' 
	WHERE CONVERT(DATE, C.DateTimeEndProcess) = @DATETODAY
    AND B.ClientNumber = '144' 
	AND C.Status = 'CLOSED'

	INSERT INTO #tbl_MHSI_Scorecard_Availments
           ([DATETIMEQUEUED]
           ,[trxnnumber]
           ,[BRANCHNAME]
           ,[ItemClass]
           ,[TRANSACTIONTYPE]
		   ,[PackageNumber]
		   ,[PackageRate]
           ,[ProcedureName]
           ,[ItemNumber]
           ,[SPECIALTY]
           ,[CPTCODE]
           ,[PRICE]
           ,[CARDNUMBER]
           ,[PLANID]
           ,[PLANDESC]
		   ,[FUNDINGMGNT]
           ,[DATETIMEDONE]
           ,[CATEGORY]
           ,[MONTH]
           ,[YEAR]
           ,[SYSTEMDATE]
		   )
	SELECT DATETIMEQUEUED,
		trxnnumber,
		CONVERT(VARCHAR(10),BRANCHNUMBER) AS BRANCHNAME, --01172024
		ItemClass,
		TRANSACTIONTYPE,
		PackageNumber,
		[PackageRate],
		ProcedureName,
		ItemNumber,
		SPECIALTY,
		CPTCODE,
		PRICE,
		CARDNUMBER,
		PLANID,
		PLANDESC,
		FUNDINGMGNT,
		DATETIMEDONE,
		CATEGORY,
		@MONTHNAME,
		@YEAR,
		GETDATE()
	FROM #TEMP_AVAILMENTS WITH(NOLOCK)

	-- AVAILMENTS FROM ANOTHER SP

	SET @SPNAME = 'usp_MHSI_Census_Daily_Report_Summary'

	SELECT 
	CONVERT(VARCHAR(10), BRANCHNUMBER) AS BranchName,
	BranchName AS BRANCH_DESC
	INTO #TEMP_BRANCH
	FROM [dbo].refBranch WITH(NOLOCK)
	WHERE (BRANCHNAME LIKE 'PRIMARY CARE%' 
	OR BranchName LIKE 'MAXICARE MOBILE VAN'
	OR BranchName LIKE 'HOMECARE%')
	AND Active = 'Y'

	-- AVAILMENTS
	SELECT  [DATETIMEQUEUED]
			,[trxnnumber]
			,BL.[BRANCHNAME]
			,[ItemClass]
			,ISNULL([TRANSACTIONTYPE],'') AS [TRANSACTIONTYPE]
			,PackageNumber
			,ISNULL(PackageRate,0) AS PackageRate
			,COUNT([ProcedureName]) AS AVAILMENT_CENSUS
			,[ProcedureName]
			,ItemNumber
			,[SPECIALTY]
			,[CPTCODE]
			,ISNULL(PRICE,0) AS PRICE
			,CARDNUMBER
			,PLANID
			,PLANDESC
			,FUNDINGMGNT,
			-- Counting occurrences of FUNDINGMGNT values
			COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS COUNT_F,
			COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS COUNT_A,
			COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS COUNT_NULL --SDS1
			,DATETIMEDONE
	INTO #TEMP_tbl_MHSI_Scorecard_Availments
	FROM #TEMP_BRANCH BL WITH(NOLOCK)
	LEFT JOIN #tbl_MHSI_Scorecard_Availments A WITH(NOLOCK) 
		ON A.BRANCHNAME = BL.BRANCHNAME COLLATE DATABASE_DEFAULT 
	WHERE CONVERT(DATE,DATETIMEQUEUED) BETWEEN @WMOTHFROM AND @DATETO
	GROUP BY [DATETIMEQUEUED]
			,[trxnnumber]
			,BL.[BRANCHNAME]
			,[ItemClass]
			,[TRANSACTIONTYPE]
			,[ItemNumber]
			,[SPECIALTY]
			,[CPTCODE]
			,[PRICE]
			,[CARDNUMBER]
			,[PLANID]
			,[PLANDESC]
			,FUNDINGMGNT --SDS1
			,[DATETIMEDONE]
			,[ProcedureName]
			,PACKAGENUMBER
			,PACKAGERATE

	-- UPDATE VACCINES FOR SPECIFIC
	UPDATE #TEMP_tbl_MHSI_Scorecard_Availments
	SET SPECIALTY = 'ANIMAL BITE'
	WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Animal Bite')
	-- WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Animal Bite')

	UPDATE #TEMP_tbl_MHSI_Scorecard_Availments
	SET SPECIALTY = 'FLU VACCINE'
	WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Flu Vaccine')
	-- WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Flu Vaccine')

	UPDATE #TEMP_tbl_MHSI_Scorecard_Availments
	SET SPECIALTY = 'OTHERS'
	WHERE ItemClass = 'VACCINES' AND ItemNumber NOT IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE IN ('Flu Vaccine', 'Animal Bite'))
	-- WHERE ItemClass = 'VACCINES' AND ItemNumber NOT IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE IN ('Flu Vaccine', 'Animal Bite'))

	-- ACCOUNT TYPES
	SELECT DISTINCT HeaderNumber, BranchName, ACCOUNTTYPE
	INTO #TEMP_tbl_MHSI_Scorecard_AccountType
	FROM [dbo].[tbl_MHSI_Scorecard_AccountType] WITH(NOLOCK)
	WHERE CONVERT(DATE,DATETIMEDONE) BETWEEN @WMOTHFROM AND @DATETO

	SELECT BRANCHNAME, HEADERNUMBER, COUNT(DISTINCT ISNULL(ACCOUNTTYPE,'')) AS ACCOUNTTYPE
	INTO #TEMP
	FROM #TEMP_tbl_MHSI_Scorecard_AccountType WITH(NOLOCK)
	GROUP BY BRANCHNAME, HEADERNUMBER
	HAVING COUNT(DISTINCT ISNULL(ACCOUNTTYPE,'')) > 1

	SELECT DISTINCT BRANCHNAME, HEADERNUMBER, ACCOUNTTYPE 
	INTO #TEMP_V1
	FROM #TEMP_tbl_MHSI_Scorecard_AccountType
	WHERE HEADERNUMBER IN (SELECT DISTINCT HEADERNUMBER FROM #TEMP )
	AND ACCOUNTTYPE <> ''
	ORDER BY HEADERNUMBER 

	UPDATE #TEMP_tbl_MHSI_Scorecard_AccountType 
	SET ACCOUNTTYPE = B.ACCOUNTTYPE
	FROM #TEMP_tbl_MHSI_Scorecard_AccountType A WITH(NOLOCK) 
	INNER JOIN #TEMP_V1 B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.HEADERNUMBER = A.HEADERNUMBER
	WHERE A.ACCOUNTTYPE IS NULL

	DROP TABLE #TEMP,#TEMP_V1

	--AVAILMENTS
	SELECT
			A.[DATETIMEQUEUED]
			,A.[trxnnumber]
			,A.[BRANCHNAME]
			,CASE WHEN A.[TRANSACTIONTYPE] = 'ACU' THEN 'ACU'
				WHEN A.[TRANSACTIONTYPE] = 'ECU' THEN 'ECU'
				ELSE A.[ItemClass]
			END AS [ItemClass]
			,A.[TRANSACTIONTYPE]
			,A.PACKAGENUMBER
			,A.PACKAGERATE
			,A.AVAILMENT_CENSUS
			,A.[ProcedureName]
			,A.[ItemNumber]
			,CASE WHEN A.[SPECIALTY] LIKE 'OB-GYN' THEN 'OB-GYNE' ELSE A.[SPECIALTY] END AS [SPECIALTY]
			,A.[CPTCODE]
			,A.[PRICE]
			,A.FUNDINGMGNT --SDS1
			,
			-- Counting occurrences of FUNDINGMGNT values
			COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS COUNT_F,
			COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS COUNT_A,
			COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS COUNT_NULL --SDS1
			,A.[CARDNUMBER]
			,A.[DATETIMEDONE]
			,ISNULL(B.ACCOUNTTYPE,'') AS ACCOUNTTYPE
	INTO #TEMP_AVAILMENTS_ACCOUNTTYPE
	FROM #TEMP_tbl_MHSI_Scorecard_Availments A WITH(NOLOCK)
	INNER JOIN #TEMP_tbl_MHSI_Scorecard_AccountType B WITH(NOLOCK) 
		ON B.HeaderNumber = A.trxnnumber COLLATE DATABASE_DEFAULT 
		AND B.BranchName = A.BRANCHNAME COLLATE DATABASE_DEFAULT
	-- LEFT JOIN DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
		ON C.PROCEDURENUMBER = A.ItemClass  COLLATE DATABASE_DEFAULT
		AND C.TYPE = A.[SPECIALTY] COLLATE DATABASE_DEFAULT
	GROUP BY 
    A.[DATETIMEQUEUED],
    A.[trxnnumber],
    A.[BRANCHNAME],
    A.[TRANSACTIONTYPE],
    A.PACKAGENUMBER,
    A.PACKAGERATE,
    A.AVAILMENT_CENSUS,
    A.[ProcedureName],
    A.[ItemNumber],
    A.[SPECIALTY],
    A.[CPTCODE],
    A.[PRICE],
    A.FUNDINGMGNT,
    A.[CARDNUMBER],
    A.[DATETIMEDONE],
    B.ACCOUNTTYPE,
    CASE WHEN A.[TRANSACTIONTYPE] = 'ACU' THEN 'ACU'
         WHEN A.[TRANSACTIONTYPE] = 'ECU' THEN 'ECU'
         ELSE A.[ItemClass]
    END,
    CASE WHEN A.[SPECIALTY] LIKE 'OB-GYN' THEN 'OB-GYNE' ELSE A.[SPECIALTY] END
		--SELECT * FROM #TEMP_AVAILMENTS_ACCOUNTTYPE

	--AVIALMENTS
	SELECT
			A.[DATETIMEQUEUED]
			,A.[trxnnumber]
			,A.[BRANCHNAME]
			,A.[ItemClass]
			,A.[TRANSACTIONTYPE]
			,A.PACKAGENUMBER
			,A.PACKAGERATE
			,A.AVAILMENT_CENSUS
			,A.[ProcedureName]
			,A.[ItemNumber]
			,A.[SPECIALTY]
			,A.[CPTCODE]
			,A.FUNDINGMGNT --SDS1
			,
			-- Counting occurrences of FUNDINGMGNT values
			COUNT(CASE WHEN FUNDINGMGNT = 'F' THEN 1 END) AS COUNT_F,
			COUNT(CASE WHEN FUNDINGMGNT = 'A' THEN 1 END) AS COUNT_A,
			COUNT(CASE WHEN FUNDINGMGNT IS NULL THEN 1 END) AS COUNT_NULL --SDS1
			,A.[PRICE]
			,A.[CARDNUMBER]
			,A.[DATETIMEDONE]
			,CASE WHEN A.ACCOUNTTYPE = 'PRIMA GOLD' THEN 'PRIMA GOLD'
				WHEN A.ACCOUNTTYPE = 'PRIMA SILVER' THEN 'PRIMA SILVER'
				ELSE 'NON PRIMA'
			END AS ACCOUNTTYPE
			,ISNULL(B.ConsideredAs,'') AS ConsideredAs
	INTO #TEMP_AVAILMENTS_SPECIALTY
	FROM #TEMP_AVAILMENTS_ACCOUNTTYPE A WITH(NOLOCK)
	LEFT JOIN DBO.tbl_MHSI_Scorecard_Physician_Specialization B WITH(NOLOCK)
		ON B.SPECIALTY = A.SPECIALTY  COLLATE DATABASE_DEFAULT 
		AND A.ItemClass = 'CONSULT' COLLATE DATABASE_DEFAULT
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
		ON C.TYPE = A.SPECIALTY  COLLATE DATABASE_DEFAULT 
		AND A.ItemClass = 'VACCINES' COLLATE DATABASE_DEFAULT
	GROUP BY
    A.[DATETIMEQUEUED],
    A.[trxnnumber],
    A.[BRANCHNAME],
    A.[ItemClass],
    A.[TRANSACTIONTYPE],
    A.PACKAGENUMBER,
    A.PACKAGERATE,
    A.AVAILMENT_CENSUS,
    A.[ProcedureName],
    A.[ItemNumber],
    A.[SPECIALTY],
    A.[CPTCODE],
    A.FUNDINGMGNT,
    A.[PRICE],
    A.[CARDNUMBER],
    A.[DATETIMEDONE],
    CASE WHEN A.ACCOUNTTYPE = 'PRIMA GOLD' THEN 'PRIMA GOLD'
         WHEN A.ACCOUNTTYPE = 'PRIMA SILVER' THEN 'PRIMA SILVER'
         ELSE 'NON PRIMA'
    END,
    ISNULL(B.ConsideredAs, '')
	-- END OF NEW

	-- NEARBY RATE
	SELECT 
			A.[DATETIMEQUEUED]
			,A.[trxnnumber]
			,A.[BRANCHNAME]
			,A.[ItemClass]
			,A.[TRANSACTIONTYPE]
			,A.PACKAGENUMBER
			,A.PACKAGERATE
			,A.AVAILMENT_CENSUS
			,A.[ProcedureName]
			,A.[ItemNumber]
			,A.[SPECIALTY]
			,A.[CPTCODE]
			,A.FUNDINGMGNT --SDS1
			,
			-- Counting occurrences of FUNDINGMGNT values
			COUNT(CASE WHEN FUNDINGMGNT = 'F' THEN 1 END) AS COUNT_F,
			COUNT(CASE WHEN FUNDINGMGNT = 'A' THEN 1 END) AS COUNT_A,
			COUNT(CASE WHEN FUNDINGMGNT IS NULL THEN 1 END) AS COUNT_NULL --SDS1
			,A.[PRICE] AS MYH_RATE
			,A.[CARDNUMBER]
			,A.[DATETIMEDONE]
			,A.ACCOUNTTYPE
			,A.ConsideredAs
			,ISNULL(B.AverageAmountPTN,0) AS NEARBYRATE
			,@MONTHNAME AS MONTH_NAME
			,@NOOFDAYS AS NOOFDAYS
	INTO #TEMP_NEARBYRATE 
	FROM #TEMP_AVAILMENTS_SPECIALTY A WITH(NOLOCK)
	LEFT JOIN DBO.[TBL_MHSI_Scorecard_AAPCC] B WITH(NOLOCK)
		ON B.BranchName = A.BRANCHNAME COLLATE DATABASE_DEFAULT 
		AND B.CPTCode = A.CPTCODE COLLATE DATABASE_DEFAULT
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
		ON C.CPTCODE = A.CPTCODE COLLATE DATABASE_DEFAULT
	WHERE A.BRANCHNAME NOT IN ('422','475','476','477','478','479')
	GROUP BY 
    A.[DATETIMEQUEUED],
    A.[trxnnumber],
    A.[BRANCHNAME],
    A.[ItemClass],
    A.[TRANSACTIONTYPE],
    A.PACKAGENUMBER,
    A.PACKAGERATE,
    A.AVAILMENT_CENSUS,
    A.[ProcedureName],
    A.[ItemNumber],
    A.[SPECIALTY],
    A.[CPTCODE],
    A.FUNDINGMGNT,
    A.[PRICE],
    A.[CARDNUMBER],
    A.[DATETIMEDONE],
    A.ACCOUNTTYPE,
    A.ConsideredAs,
    ISNULL(B.AverageAmountPTN, 0)
	-- END OF NEW
	
	 --NEARBY F RATE FOR MAXICARE MOBILE VAN & HOMECARE VAN HIACE NGP 2695
	INSERT INTO #TEMP_NEARBYRATE
		(DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		PACKAGENUMBER,
		PACKAGERATE,
		AVAILMENT_CENSUS,
		ProcedureName,
		ItemNumber,
		SPECIALTY,
		CPTCODE,
		FUNDINGMGNT, --SDS1
		COUNT_F, --SDS1
		COUNT_A, --SDS1
		COUNT_NULL, --SDS1
		MYH_RATE,
		CARDNUMBER,
		DATETIMEDONE,
		ACCOUNTTYPE,
		ConsideredAs,
		NEARBYRATE,
		MONTH_NAME,
		NOOFDAYS)
	SELECT 
			A.[DATETIMEQUEUED]
			,A.[trxnnumber]
			,A.[BRANCHNAME]
			,A.[ItemClass]
			,A.[TRANSACTIONTYPE]
			,A.PACKAGENUMBER
			,A.PACKAGERATE
			,A.AVAILMENT_CENSUS
			,A.[ProcedureName]
			,A.[ItemNumber]
			,A.[SPECIALTY]
			,A.[CPTCODE]
			,A.FUNDINGMGNT --SDS1
			,
			-- Counting occurrences of FUNDINGMGNT values
			COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END),
			COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) ,
			COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) --SDS1
			,A.[PRICE] AS MYH_RATE
			,A.[CARDNUMBER]
			,A.[DATETIMEDONE]
			,A.ACCOUNTTYPE
			,A.ConsideredAs
			,ISNULL(B.AverageAmountPTN,0) AS NEARBYRATE
			,@MONTHNAME AS MONTH_NAME,
			@NOOFDAYS AS NOOFDAYS
	 FROM #TEMP_AVAILMENTS_SPECIALTY A WITH(NOLOCK)
	 LEFT JOIN DBO.[TBL_MHSI_Scorecard_AAPCC] B WITH(NOLOCK) 
		ON B.BranchName = '362' 
		AND B.CPTCode = A.CPTCODE COLLATE DATABASE_DEFAULT 
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
		ON C.CPTCODE = A.CPTCODE COLLATE DATABASE_DEFAULT
	WHERE A.BRANCHNAME IN ('422','475','476','477','478','479')
	-- NEW
	GROUP BY 
    A.[DATETIMEQUEUED],
    A.[trxnnumber],
    A.[BRANCHNAME],
    A.[ItemClass],
    A.[TRANSACTIONTYPE],
    A.PACKAGENUMBER,
    A.PACKAGERATE,
    A.AVAILMENT_CENSUS,
    A.[ProcedureName],
    A.[ItemNumber],
    A.[SPECIALTY],
    A.[CPTCODE],
    A.FUNDINGMGNT,
    A.[PRICE],
    A.[CARDNUMBER],
    A.[DATETIMEDONE],
    A.ACCOUNTTYPE,
    A.ConsideredAs,
    ISNULL(B.AverageAmountPTN, 0)
	--END OF NEW

	INSERT INTO #TEMP_NEARBYRATE
		(DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		PACKAGENUMBER,
		PACKAGERATE,
		AVAILMENT_CENSUS,
		ProcedureName,
		ItemNumber,
		SPECIALTY,
		CPTCODE,
		FUNDINGMGNT, --SDS1
		COUNT_F, --SDS1
		COUNT_A, --SDS1
		COUNT_NULL, --SDS1
		MYH_RATE,
		CARDNUMBER,
		DATETIMEDONE,
		ACCOUNTTYPE,
		ConsideredAs,
		NEARBYRATE,
		MONTH_NAME,
		NOOFDAYS)
	SELECT 
			A.[DATETIMEQUEUED]
			,A.[trxnnumber]
			,A.[BRANCHNAME]
			,A.[ItemClass]
			,A.[TRANSACTIONTYPE]
			,A.PACKAGENUMBER
			,A.PACKAGERATE
			,A.AVAILMENT_CENSUS
			,A.[ProcedureName]
			,A.[ItemNumber]
			,A.[SPECIALTY]
			,A.[CPTCODE]
			,A.FUNDINGMGNT, --SDS1
			-- Counting occurrences of FUNDINGMGNT values
			COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END),
			COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) ,
			COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) --SDS1
			,A.[PRICE] AS MYH_RATE
			,A.[CARDNUMBER]
			,A.[DATETIMEDONE]
			,A.ACCOUNTTYPE
			,A.ConsideredAs
			,ISNULL(B.AverageAmountPTN,0) AS NEARBYRATE
			,@MONTHNAME AS MONTH_NAME,
			@NOOFDAYS AS NOOFDAYS
	 FROM #TEMP_AVAILMENTS_SPECIALTY A WITH(NOLOCK)
	 LEFT JOIN DBO.[TBL_MHSI_Scorecard_AAPCC] B WITH(NOLOCK) 
		ON B.BranchName = '362' 
		AND B.CPTCode = A.CPTCODE COLLATE DATABASE_DEFAULT 
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
		ON C.CPTCODE = A.CPTCODE COLLATE DATABASE_DEFAULT
	WHERE A.BRANCHNAME IN ('422','475','476','477','478','479')
	-- NEW
	GROUP BY 
		A.[DATETIMEQUEUED],
		A.[trxnnumber],
		A.[BRANCHNAME],
		A.[ItemClass],
		A.[TRANSACTIONTYPE],
		A.PACKAGENUMBER,
		A.PACKAGERATE,
		A.AVAILMENT_CENSUS,
		A.[ProcedureName],
		A.[ItemNumber],
		A.[SPECIALTY],
		A.[CPTCODE],
		A.FUNDINGMGNT,
		A.[PRICE],
		A.[CARDNUMBER],
		A.[DATETIMEDONE],
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		ISNULL(B.AverageAmountPTN, 0)
	-- END OF NEW

	-- UPDATE NEARBY F RATE PER ITEM CLASS
	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 12000
	WHERE ItemClass = 'CT SCAN' AND NEARBYRATE = 0

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 450
	WHERE ItemClass = 'CONSULT' AND ConsideredAs = 'IM/FM/GP'

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 550
	WHERE ItemClass = 'CONSULT' AND ConsideredAs = 'SPECIALIST'

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 738.4
	WHERE ItemClass = 'LABORATORY' AND NEARBYRATE = 0

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 2447.28
	WHERE ItemClass = 'ULTRASOUND' AND NEARBYRATE = 0

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 798.78
	WHERE ItemClass = 'XRAY' AND NEARBYRATE = 0

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 770.16
	WHERE ItemClass = 'HEART - ECG' AND NEARBYRATE = 0

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 4739.92
	WHERE ItemClass = 'HEART - ECHO' AND NEARBYRATE = 0 

	UPDATE #TEMP_NEARBYRATE 
	SET NEARBYRATE = 2500
	WHERE ItemClass = 'VACCINES' AND NEARBYRATE = 0

	DELETE FROM #TEMP_NEARBYRATE 
	WHERE ProcedureName = 'COMPLETE PHYSICAL EXAMINATION (ACU)' 
	AND MYH_RATE = 0
	AND ItemClass IN ('ACU','ECU')

	SELECT 
	 A.[DATETIMEQUEUED],
	 A.[trxnnumber],
	 A.[BRANCHNAME],
	 A.[ItemClass],
	 A.[TRANSACTIONTYPE],
	 A.PackageNumber,
	 A.PACKAGERATE,
	 A.AVAILMENT_CENSUS,
	 A.[ProcedureName],
	 A.[SPECIALTY],
	 A.[CPTCODE],
	 A.FUNDINGMGNT, --SDS1
	-- Counting occurrences of FUNDINGMGNT values
	COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS COUNT_F,
	COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS COUNT_A,
	COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS COUNT_NULL, --SDS1
	 A.MYH_RATE,
	 A.[CARDNUMBER],
	 A.[DATETIMEDONE],
	 A.ACCOUNTTYPE,
	 A.ConsideredAs,
	 A.NEARBYRATE,
	 A.MONTH_NAME,
	 A.NOOFDAYS,
	CASE 
		WHEN A.ItemClass = 'CONSULT' THEN '374.90'
		WHEN A.ItemClass = 'CT SCAN' THEN '12000'
		ELSE ISNULL(B.TOTALCOST,0)
	END AS TOTALCOST
	INTO #TEMP_PCC_PRICING
	FROM #TEMP_NEARBYRATE A WITH(NOLOCK)
	LEFT JOIN DBO.TBL_MHSI_PCC_PRICING B WITH(NOLOCK)
	ON B.CPTCODE = A.CPTCODE COLLATE DATABASE_DEFAULT --sds
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
	ON C.CPTCODE = A.CPTCODE COLLATE DATABASE_DEFAULT
	--NEW
	GROUP BY 
		A.[DATETIMEQUEUED],
		A.[trxnnumber],
		A.[BRANCHNAME],
		A.[ItemClass],
		A.[TRANSACTIONTYPE],
		A.PackageNumber,
		A.PACKAGERATE,
		A.AVAILMENT_CENSUS,
		A.[ProcedureName],
		A.[SPECIALTY],
		A.[CPTCODE],
		A.FUNDINGMGNT,
		A.MYH_RATE,
		A.[CARDNUMBER],
		A.[DATETIMEDONE],
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		A.NEARBYRATE,
		A.MONTH_NAME,
		A.NOOFDAYS,
		CASE 
			WHEN A.ItemClass = 'CONSULT' THEN '374.90'
			WHEN A.ItemClass = 'CT SCAN' THEN '12000'
			ELSE ISNULL(B.TOTALCOST, 0)
		END
	--END

	-- WEEKLY TARGET FOR BRANCHES & ITEM CLASSES	
	SELECT A.DATETIMEQUEUED,
		A.trxnnumber,
		A.BRANCHNAME,
		A.ItemClass,
		A.TRANSACTIONTYPE,
		A.PACKAGENUMBER,
		A.AVAILMENT_CENSUS,
		A.ProcedureName,
		A.SPECIALTY,
		A.CPTCODE,
		A.FUNDINGMGNT, --SDS1
		-- Counting occurrences of FUNDINGMGNT values
		COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS AVAILMENTS_COUNT_F,
		COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS AVAILMENTS_COUNT_A ,
		COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS AVAILMENTS_COUNT_NULL, --SDS1
		COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS AVAILERS_COUNT_F,
		COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS AVAILERS_COUNT_A ,
		COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS AVAILERS_COUNT_NULL, --SDS1
		((CASE WHEN A.TRANSACTIONTYPE IN ('ACU','ECU') THEN A.PACKAGERATE ELSE A.MYH_RATE END) * A.AVAILMENT_CENSUS) AS MYH_RATE,
		A.CARDNUMBER,
		A.DATETIMEDONE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		CONVERT(NUMERIC(19,5),( (CASE WHEN A.TRANSACTIONTYPE IN ('ACU','ECU') THEN A.PACKAGERATE ELSE A.NEARBYRATE END) * A.AVAILMENT_CENSUS)) AS NEARBY_RATE,
		CONVERT(NUMERIC(19,5),( (CASE WHEN A.TRANSACTIONTYPE IN ('ACU','ECU') THEN A.PACKAGERATE ELSE A.TOTALCOST END) * A.AVAILMENT_CENSUS)) AS TOTALCOST,
		A.MONTH_NAME,
		A.NOOFDAYS,
		CASE WHEN A.MONTH_NAME = 'JANUARY' THEN ISNULL(B.JAN_AMOUNT,0)
			WHEN A.MONTH_NAME = 'FEBRUARY' THEN ISNULL(B.FEB_AMOUNT,0)
			WHEN A.MONTH_NAME = 'MARCH' THEN ISNULL(B.MAR_AMOUNT,0)
			WHEN A.MONTH_NAME = 'APRIL' THEN ISNULL(B.APR_AMOUNT,0)
			WHEN A.MONTH_NAME = 'MAY' THEN ISNULL(B.MAY_AMOUNT,0)
			WHEN A.MONTH_NAME = 'JUNE' THEN ISNULL(B.JUN_AMOUNT,0)
			WHEN A.MONTH_NAME = 'JULY' THEN ISNULL(B.JUL_AMOUNT,0)
			WHEN A.MONTH_NAME = 'AUGUST' THEN ISNULL(B.AUG_AMOUNT,0)
			WHEN A.MONTH_NAME = 'SEPTEMBER' THEN ISNULL(B.SEP_AMOUNT,0)
			WHEN A.MONTH_NAME = 'OCTOBER' THEN ISNULL(B.OCT_AMOUNT,0)
			WHEN A.MONTH_NAME = 'NOVEMBER' THEN ISNULL(B.NOV_AMOUNT,0)
			WHEN A.MONTH_NAME = 'DECEMBER' THEN ISNULL(B.DEC_AMOUNT,0)
		END AS WKTARGET_RATE,
		CASE WHEN A.MONTH_NAME = 'JANUARY' THEN ISNULL(B.JAN_CAPACITY,0)
			WHEN A.MONTH_NAME = 'FEBRUARY' THEN ISNULL(B.FEB_CAPACITY,0)
			WHEN A.MONTH_NAME = 'MARCH' THEN ISNULL(B.MAR_CAPACITY,0)
			WHEN A.MONTH_NAME = 'APRIL' THEN ISNULL(B.APR_CAPACITY,0)
			WHEN A.MONTH_NAME = 'MAY' THEN ISNULL(B.MAY_CAPACITY,0)
			WHEN A.MONTH_NAME = 'JUNE' THEN ISNULL(B.JUN_CAPACITY,0)
			WHEN A.MONTH_NAME = 'JULY' THEN ISNULL(B.JUL_CAPACITY,0)
			WHEN A.MONTH_NAME = 'AUGUST' THEN ISNULL(B.AUG_CAPACITY,0)
			WHEN A.MONTH_NAME = 'SEPTEMBER' THEN ISNULL(B.SEP_CAPACITY,0)
			WHEN A.MONTH_NAME = 'OCTOBER' THEN ISNULL(B.OCT_CAPACITY,0)
			WHEN A.MONTH_NAME = 'NOVEMBER' THEN ISNULL(B.NOV_CAPACITY,0)
			WHEN A.MONTH_NAME = 'DECEMBER' THEN ISNULL(B.DEC_CAPACITY,0)
		END AS WKTARGET_CENSUS
	INTO #TEMP_WEEKLYTARGET
	FROM #TEMP_PCC_PRICING A WITH(NOLOCK)
	LEFT JOIN dbo.[TBL_MHSI_Scorecard_PCCTC] B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME COLLATE DATABASE_DEFAULT 
		AND B.ITEMCLASS = A.ItemClass COLLATE DATABASE_DEFAULT 
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK) 
		ON C.AVAILMENT = A.ItemClass COLLATE DATABASE_DEFAULT 
		AND C.CPTCODE = A.CPTCODE COLLATE DATABASE_DEFAULT 
	--NEW
	GROUP BY 
    A.DATETIMEQUEUED,
    A.trxnnumber,
    A.BRANCHNAME,
    A.ItemClass,
    A.TRANSACTIONTYPE,
    A.PACKAGENUMBER,
    A.AVAILMENT_CENSUS,
    A.ProcedureName,
    A.SPECIALTY,
    A.CPTCODE,
    A.FUNDINGMGNT,
    ((CASE WHEN A.TRANSACTIONTYPE IN ('ACU', 'ECU') THEN A.PACKAGERATE ELSE A.MYH_RATE END) * A.AVAILMENT_CENSUS),
    A.CARDNUMBER,
    A.DATETIMEDONE,
    A.ACCOUNTTYPE,
    A.ConsideredAs,
    CONVERT(NUMERIC(19, 5), ((CASE WHEN A.TRANSACTIONTYPE IN ('ACU', 'ECU') THEN A.PACKAGERATE ELSE A.NEARBYRATE END) * A.AVAILMENT_CENSUS)),
    CONVERT(NUMERIC(19, 5), ((CASE WHEN A.TRANSACTIONTYPE IN ('ACU', 'ECU') THEN A.PACKAGERATE ELSE A.TOTALCOST END) * A.AVAILMENT_CENSUS)),
    A.MONTH_NAME,
    A.NOOFDAYS,
    CASE 
        WHEN A.MONTH_NAME = 'JANUARY' THEN ISNULL(B.JAN_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'FEBRUARY' THEN ISNULL(B.FEB_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'MARCH' THEN ISNULL(B.MAR_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'APRIL' THEN ISNULL(B.APR_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'MAY' THEN ISNULL(B.MAY_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'JUNE' THEN ISNULL(B.JUN_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'JULY' THEN ISNULL(B.JUL_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'AUGUST' THEN ISNULL(B.AUG_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'SEPTEMBER' THEN ISNULL(B.SEP_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'OCTOBER' THEN ISNULL(B.OCT_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'NOVEMBER' THEN ISNULL(B.NOV_AMOUNT, 0)
        WHEN A.MONTH_NAME = 'DECEMBER' THEN ISNULL(B.DEC_AMOUNT, 0)
    END,
    CASE 
        WHEN A.MONTH_NAME = 'JANUARY' THEN ISNULL(B.JAN_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'FEBRUARY' THEN ISNULL(B.FEB_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'MARCH' THEN ISNULL(B.MAR_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'APRIL' THEN ISNULL(B.APR_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'MAY' THEN ISNULL(B.MAY_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'JUNE' THEN ISNULL(B.JUN_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'JULY' THEN ISNULL(B.JUL_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'AUGUST' THEN ISNULL(B.AUG_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'SEPTEMBER' THEN ISNULL(B.SEP_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'OCTOBER' THEN ISNULL(B.OCT_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'NOVEMBER' THEN ISNULL(B.NOV_CAPACITY, 0)
        WHEN A.MONTH_NAME = 'DECEMBER' THEN ISNULL(B.DEC_CAPACITY, 0)
    END
	--END

	-- UPDATE WEEKLY TARGET FOR VACCINES SPECIFIC
	UPDATE #TEMP_WEEKLYTARGET
	SET ConsideredAs = 'ANIMAL BITE'
	WHERE ItemClass = 'VACCINES' AND CPTCODE IN (SELECT CPTCODE COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Animal Bite')
	-- WHERE ItemClass = 'VACCINES' AND CPTCODE IN (SELECT CPTCODE FROM DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Animal Bite')

	UPDATE #TEMP_WEEKLYTARGET
	SET ConsideredAs = 'FLU VACCINE'
	WHERE ItemClass = 'VACCINES' AND CPTCODE IN (SELECT CPTCODE COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Flu Vaccine')
	-- WHERE ItemClass = 'VACCINES' AND CPTCODE IN (SELECT CPTCODE FROM DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Flu Vaccine')
	
	UPDATE #TEMP_WEEKLYTARGET
	SET SPECIALTY = 'OTHERS'
	WHERE ItemClass = 'VACCINES' AND CPTCODE NOT IN (SELECT CPTCODE COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE IN ('Flu Vaccine', 'Animal Bite'))
	-- WHERE ItemClass = 'VACCINES' AND CPTCODE NOT IN (SELECT CPTCODE FROM DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE IN ('Flu Vaccine', 'Animal Bite'))
		
	SELECT DISTINCT
		DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		AVAILMENT_CENSUS,
		ProcedureName,
		SPECIALTY,
		CPTCODE,
		FUNDINGMGNT, --SDS1
		COUNT(CASE WHEN FUNDINGMGNT = 'F' THEN 1 END) as COUNT_F,
		COUNT(CASE WHEN FUNDINGMGNT = 'A' THEN 1 END) as COUNT_A ,
		COUNT(CASE WHEN FUNDINGMGNT IS NULL THEN 1 END) as COUNT_NULL, --SDS1
		ISNULL(MYH_RATE,0) AS MYH_RATE,
		ACCOUNTTYPE,
		ISNULL(ConsideredAs,'') AS ConsideredAs,
		ISNULL(NEARBY_RATE,0) AS NEARBY_RATE,
		ISNULL(TOTALCOST,0) AS TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		WKTARGET_RATE AS TARGET_RATE,
		(WKTARGET_RATE / NOOFDAYS) AS WKTARGET_RATE,
		WKTARGET_CENSUS AS TARGET_CENSUS,
		CONVERT(NUMERIC(19,5),(CONVERT(NUMERIC(19,5),WKTARGET_CENSUS) / CONVERT(NUMERIC(19,5),NOOFDAYS))) AS WKTARGET_CENSUS 
	INTO #TEMP_WEEKLYTARGET_FINAL
	FROM #TEMP_WEEKLYTARGET WITH(NOLOCK)
	--NEW
	GROUP BY 
    DATETIMEQUEUED,
    trxnnumber,
    BRANCHNAME,
    ItemClass,
    TRANSACTIONTYPE,
    AVAILMENT_CENSUS,
    ProcedureName,
    SPECIALTY,
    CPTCODE,
    FUNDINGMGNT,
    ISNULL(MYH_RATE, 0),
    ACCOUNTTYPE,
    ISNULL(ConsideredAs, ''),
    ISNULL(NEARBY_RATE, 0),
    ISNULL(TOTALCOST, 0),
    MONTH_NAME,
    NOOFDAYS,
    WKTARGET_RATE,
    WKTARGET_CENSUS
	--END


	-- ITEM CLASS AND CONSIDERED AS
	SELECT DISTINCT ItemClass, ConsideredAs 
	INTO #TEMP_ITEMCLASS 
	FROM #TEMP_WEEKLYTARGET_FINAL WITH(NOLOCK)
	
	DELETE FROM #TEMP_ITEMCLASS
	WHERE ItemClass = 'CONSULT'
	AND ConsideredAs = ''

	--SELECT * FROM #TEMP_WEEKLYTARGET_FINAL
	
	--DELETE FROM #TEMP_ITEMCLASS
	--WHERE ItemClass = 'VACCINES'
	--AND ConsideredAs = ''

	-- SEPARATE INCLUSIVE FROM EXCLUSIVE
	-- WEEKLY TARGET FINAL (EXCLUSIVE) 
	SELECT DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		AVAILMENT_CENSUS,
		ProcedureName,
		SPECIALTY,
		CPTCODE,
		FUNDINGMGNT, --SDS1
		COUNT_F AS AVAILERS_COUNT_F, --SDS1
		COUNT_A AS AVAILERS_COUNT_A, --SDS1
		COUNT_NULL AS AVAILERS_COUNT_NULL, --SDS1
		MYH_RATE,
		ACCOUNTTYPE,
		ConsideredAs,
		NEARBY_RATE,
		TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		TARGET_RATE,
		WKTARGET_RATE,
		TARGET_CENSUS,
		WKTARGET_CENSUS
	INTO #TEMP_WEEKLYTARGET_FINAL_EXCLUSIVE
	FROM #TEMP_WEEKLYTARGET_FINAL WITH(NOLOCK)
	WHERE ACCOUNTTYPE = 'NON PRIMA'

	SELECT IDENTITY(INT,1,1) AS ROWID,
		A.BranchName,
		B.ItemClass,
		B.ConsideredAs,
		@MONTHNAME AS MONTH_NAME,
		@YEAR AS REPORT_YEAR
	INTO #TEMP_BRANCH_ITEMCLASS
	FROM #TEMP_BRANCH A WITH(NOLOCK)
	CROSS JOIN #TEMP_ITEMCLASS B WITH(NOLOCK)
	WHERE A.BranchName LIKE 'PRIMARY%'
	ORDER BY A.BranchName

	INSERT INTO #TEMP_BRANCH_ITEMCLASS
		(BranchName,
		ItemClass,
		ConsideredAs,
		MONTH_NAME,
		REPORT_YEAR)
	SELECT 
		A.BranchName,
		B.ItemClass,
		B.ConsideredAs,
		@MONTHNAME AS MONTH_NAME,
		@YEAR AS REPORT_YEAR
	FROM #TEMP_BRANCH A WITH(NOLOCK)
	CROSS JOIN #TEMP_ITEMCLASS B WITH(NOLOCK)
	WHERE A.BranchName NOT LIKE 'PRIMARY%'
	ORDER BY A.BranchName

	--AVAILERS
	SELECT 
		CONVERT(DATE,DATETIMEQUEUED) AS DATETIMEQUEUED, 
		PATIENTNUMBER,
		trxnnumber, 
		ItemClass,
		TRANSACTIONTYPE,
		SPECIAlty, 
		CARDNUMBER,
		BL.BranchName, 
		PLANID,
		PRICE,
		ProcedureName,
		A.ItemNumber,
		A.FUNDINGMGNT, --SDS1
		COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS AVAILERS_COUNT_F,     --SDS1
		COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS AVAILERS_COUNT_A ,    --SDS1
		COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS AVAILERS_COUNT_NULL --SDS1
	INTO #TEMP_tbl_MHSI_Scorecard_Availers
	FROM #TEMP_BRANCH BL WITH(NOLOCK)
	LEFT JOIN #tbl_MHSI_Scorecard_Availers A WITH(NOLOCK) 
		ON A.BRANCHNAME = BL.BRANCHNAME COLLATE DATABASE_DEFAULT 
	-- LEFT JOIN DBO.TBL_MHSI_VACCINE_SPECIFIC B WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC B WITH(NOLOCK)
		ON B.TYPE = A.SPECIALTY COLLATE DATABASE_DEFAULT
	WHERE CONVERT(DATE,DATETIMEQUEUED) BETWEEN @WMOTHFROM AND @DATETO
	--NEW
	GROUP BY 
		CONVERT(DATE, A.DATETIMEQUEUED),
		A.PATIENTNUMBER,
		A.trxnnumber, 
		A.ItemClass,
		A.TRANSACTIONTYPE,
		A.SPECIALTY, 
		A.CARDNUMBER,
		BL.BranchName, 
		A.PLANID,
		A.PRICE,
		A.ProcedureName,
		A.ItemNumber,
		A.FUNDINGMGNT
		--END

	-- UPDDATE AVAILERS VACCINE SPECIFIC
	UPDATE #TEMP_tbl_MHSI_Scorecard_Availers
	SET SPECIALTY = 'ANIMAL BITE'
	WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Animal Bite')
	-- WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER FROM dbo.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Animal Bite')

	UPDATE #TEMP_tbl_MHSI_Scorecard_Availers
	SET SPECIALTY = 'FLU VACCINE'
	WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Flu Vaccine')
	-- WHERE ItemClass = 'VACCINES' AND ItemNumber IN (SELECT PROCEDURENUMBER FROM dbo.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE = 'Flu Vaccine')
	
	UPDATE #TEMP_tbl_MHSI_Scorecard_Availers
	SET SPECIALTY = 'OTHERS'
	WHERE ItemClass = 'VACCINES' AND ItemNumber IS NULL -- NOT IN (SELECT PROCEDURENUMBER COLLATE DATABASE_DEFAULT FROM MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE IN ('Flu Vaccine', 'Animal Bite'))
	-- WHERE ItemClass = 'VACCINES' AND ItemNumber NOT IN (SELECT PROCEDURENUMBER FROM dbo.TBL_MHSI_VACCINE_SPECIFIC WHERE TYPE IN ('Flu Vaccine', 'Animal Bite'))

	--AVAILERS ACCOUNTTYPE
	SELECT A.DATETIMEQUEUED, 
			A.PATIENTNUMBER,
			A.trxnnumber, 
			CASE WHEN A.[TRANSACTIONTYPE] = 'ACU' THEN 'ACU'
				WHEN A.[TRANSACTIONTYPE] = 'ECU' THEN 'ECU'
				ELSE A.[ItemClass]
			END AS [ItemClass],
			A.TRANSACTIONTYPE, 
			CASE WHEN A.[SPECIALTY] LIKE 'OB-GYN' THEN 'OB-GYNE' ELSE A.[SPECIALTY] END AS [SPECIALTY], 
			A.CARDNUMBER,
			A.FUNDINGMGNT, --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS AVAILERS_COUNT_F,     --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS AVAILERS_COUNT_A ,    --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS AVAILERS_COUNT_NULL, --SDS1
			A.BranchName, 
			ISNULL(B.ACCOUNTTYPE,'') AS ACCOUNTTYPE,
			A.ProcedureName
	INTO #TEMP_AVAILERS_ACCOUNTTYPE 
	FROM #TEMP_tbl_MHSI_Scorecard_Availers A WITH(NOLOCK)
	LEFT JOIN #TEMP_tbl_MHSI_Scorecard_AccountType B WITH(NOLOCK) 
		ON B.HeaderNumber = A.trxnnumber COLLATE DATABASE_DEFAULT 
		AND B.BranchName = A.BRANCHNAME COLLATE DATABASE_DEFAULT
		--NEW
		GROUP BY 
    A.DATETIMEQUEUED,
    A.PATIENTNUMBER,
    A.trxnnumber,
    CASE 
        WHEN A.[TRANSACTIONTYPE] = 'ACU' THEN 'ACU'
        WHEN A.[TRANSACTIONTYPE] = 'ECU' THEN 'ECU'
        ELSE A.[ItemClass]
    END,
    A.TRANSACTIONTYPE, 
    CASE 
        WHEN A.[SPECIALTY] LIKE 'OB-GYN' THEN 'OB-GYNE' 
        ELSE A.[SPECIALTY] 
    END,
    A.CARDNUMBER,
    A.FUNDINGMGNT, --SDS1
    A.BranchName, 
    ISNULL(B.ACCOUNTTYPE, ''), 
    A.ProcedureName
		--END
	
	SELECT 
			CONVERT(DATE,A.DATETIMEQUEUED) AS DATETIMEQUEUED, 
			A.PATIENTNUMBER,
			A.trxnnumber, 
			A.[ItemClass],
			A.TRANSACTIONTYPE, 
			A.SPECIAlty, 
			A.CARDNUMBER,
			A.FUNDINGMGNT, --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS AVAILERS_COUNT_F,     --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS AVAILERS_COUNT_A ,    --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS AVAILERS_COUNT_NULL, --SDS1
			A.BranchName, 
			CASE WHEN A.ACCOUNTTYPE = 'PRIMA GOLD' THEN 'PRIMA GOLD'
				WHEN A.ACCOUNTTYPE = 'PRIMA SILVER' THEN 'PRIMA SILVER'
				ELSE 'NON PRIMA'
			END AS ACCOUNTTYPE
			,ISNULL(B.ConsideredAs,'') AS ConsideredAs
			,@MONTHNAME AS MONTH_NAME
	INTO #TEMP_AVAILERS_SPECIALTY
	FROM #TEMP_AVAILERS_ACCOUNTTYPE A WITH(NOLOCK)
	LEFT JOIN DBO.tbl_MHSI_Scorecard_Physician_Specialization B WITH(NOLOCK)
		ON B.SPECIALTY = A.SPECIALTY COLLATE DATABASE_DEFAULT 
		AND A.ItemClass = 'CONSULT'
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
		ON C.TYPE = A.SPECIALTY COLLATE DATABASE_DEFAULT 
		AND A.ItemClass = 'VACCINES'
	WHERE A.ItemClass <> 'LABORATORY'
	GROUP BY 
    CONVERT(DATE, A.DATETIMEQUEUED),
    A.PATIENTNUMBER,
    A.trxnnumber, 
    A.[ItemClass],
    A.TRANSACTIONTYPE, 
    A.SPECIALTY, 
    A.CARDNUMBER,
    A.FUNDINGMGNT, --SDS1
    A.BranchName, 
    CASE 
        WHEN A.ACCOUNTTYPE = 'PRIMA GOLD' THEN 'PRIMA GOLD'
        WHEN A.ACCOUNTTYPE = 'PRIMA SILVER' THEN 'PRIMA SILVER'
        ELSE 'NON PRIMA'
    END,
    ISNULL(B.ConsideredAs, '')
	--END
	
	UNION

	SELECT 
	DISTINCT
			CONVERT(DATE,A.DATETIMEQUEUED) AS DATETIMEQUEUED, 
			A.PATIENTNUMBER,
			A.trxnnumber, 
			A.[ItemClass],
			A.TRANSACTIONTYPE, 
			A.SPECIAlty, 
			A.CARDNUMBER,
			A.FUNDINGMGNT, --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT = 'F' THEN 1 END) AS AVAILERS_COUNT_F,     --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT = 'A' THEN 1 END) AS AVAILERS_COUNT_A ,    --SDS1
			COUNT(CASE WHEN A.FUNDINGMGNT IS NULL THEN 1 END) AS AVAILERS_COUNT_NULL, --SDS1
			A.BranchName, 
			CASE 
				WHEN A.ACCOUNTTYPE = 'PRIMA GOLD' THEN 'PRIMA GOLD'
				WHEN A.ACCOUNTTYPE = 'PRIMA SILVER' THEN 'PRIMA SILVER'
				ELSE 'NON PRIMA'
			END AS ACCOUNTTYPE
			,ISNULL(B.ConsideredAs,'') AS ConsideredAs
			,@MONTHNAME AS MONTH_NAME
	FROM #TEMP_AVAILERS_ACCOUNTTYPE A WITH(NOLOCK) 
	LEFT JOIN DBO.tbl_MHSI_Scorecard_Physician_Specialization B WITH(NOLOCK) 
		ON B.SPECIALTY = A.SPECIALTY COLLATE DATABASE_DEFAULT 
		AND A.ItemClass = 'CONSULT'
	-- LEFT JOIN dbo.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
	LEFT JOIN MHSI_Reports.DBO.TBL_MHSI_VACCINE_SPECIFIC C WITH(NOLOCK)
		ON C.TYPE = A.SPECIALTY COLLATE DATABASE_DEFAULT 
		AND A.ItemClass = 'VACCINES'
	WHERE A.ItemClass = 'LABORATORY'
	--NEW
	GROUP BY 
    CONVERT(DATE, A.DATETIMEQUEUED),
    A.PATIENTNUMBER,
    A.trxnnumber, 
    A.[ItemClass],
    A.TRANSACTIONTYPE, 
    A.SPECIALTY, 
    A.CARDNUMBER,
    A.FUNDINGMGNT, --SDS1
    A.BranchName, 
    CASE 
        WHEN A.ACCOUNTTYPE = 'PRIMA GOLD' THEN 'PRIMA GOLD'
        WHEN A.ACCOUNTTYPE = 'PRIMA SILVER' THEN 'PRIMA SILVER'
        ELSE 'NON PRIMA'
    END,
    ISNULL(B.ConsideredAs, '')
	--END

--CURRENT WEEK
	--AVAILER CURRENT DAY
	SELECT
		CASE WHEN ITEMCLASS IN ('ACU','ECU') THEN COUNT(DISTINCT trxnnumber) 
		ELSE COUNT(trxnnumber) 
		END AS TOTAL_AVAILERS, 
		[ItemClass],
		BranchName, 
		ACCOUNTTYPE,
		ConsideredAs,
		AVAILERS_COUNT_F,
		AVAILERS_COUNT_A,
		AVAILERS_COUNT_NULL,
		MONTH_NAME
		,@CURRWEEK AS HEADER,
		@WEEKCOUNT AS WEEK_COUNT
	INTO #TEMP_AVAILER_CURRWK 
	FROM #TEMP_AVAILERS_SPECIALTY WITH(NOLOCK) --45752 || 46084
	WHERE CONVERT(DATE,DATETIMEQUEUED) = CONVERT(DATE,@DATETODAY)
	GROUP BY 
		[ItemClass],
		BranchName, 
		ACCOUNTTYPE,
		ConsideredAs,
		MONTH_NAME

	SELECT ItemClass, 
		BRANCHNAME, 
		ConsideredAs, 
		AVAILERS_COUNT_F,
		AVAILERS_COUNT_A,
		AVAILERS_COUNT_NULL,
		MONTH_NAME, 
		HEADER, 
		WEEK_COUNT,
		SUM(TOTAL_AVAILERS) AS SUBTOTAL_AVAILERS
	INTO #TEMP_AVAILER_CURRWK_SUBTOTAL
	FROM #TEMP_AVAILER_CURRWK WITH(NOLOCK)
	GROUP BY ItemClass, 
		BRANCHNAME, 
		ConsideredAs, 
		MONTH_NAME, 
		HEADER, 
		WEEK_COUNT

	--AVAILER CURRENT DAY FINAL
	SELECT A.BRANCHNAME,
		A.ItemClass,
		A.ConsideredAs,
		SUM(ISNULL(A.AVAILERS_COUNT_F,0)) AS AVAILERS_COUNT_F,
		SUM(ISNULL(A.AVAILERS_COUNT_A,0)) AS AVAILERS_COUNT_A,
		SUM(ISNULL(A.AVAILERS_COUNT_NULL,0)) AS AVAILERS_COUNT_NULL,
		B.SUBTOTAL_AVAILERS
	INTO #TEMP_AVAILER_CURRWK_FINAL
	FROM (
			SELECT ItemClass, 
				CASE WHEN ACCOUNTTYPE = 'NON PRIMA' THEN SUM(TOTAL_AVAILERS) END AS NONPRIMA,
				CASE WHEN ACCOUNTTYPE = 'PRIMA GOLD' THEN SUM(TOTAL_AVAILERS) END AS PRIMAGOLD,
				CASE WHEN ACCOUNTTYPE = 'PRIMA SILVER' THEN SUM(TOTAL_AVAILERS) END AS PRIMASILVER, 
				ACCOUNTTYPE,
				BRANCHNAME,
				ConsideredAs
			FROM #TEMP_AVAILER_CURRWK WITH(NOLOCK) 
			GROUP BY BRANCHNAME,
				ItemClass,
				ConsideredAs,
				ACCOUNTTYPE
		) A 
	INNER JOIN #TEMP_AVAILER_CURRWK_SUBTOTAL B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass 
		AND B.ConsideredAs = A.ConsideredAs
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.ConsideredAs,
		B.SUBTOTAL_AVAILERS
--AVAILERS

	--AVAILMENT CURRENT DAY (1) INCLUSIVE
	SELECT DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME AS BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		AVAILMENT_CENSUS,
		ProcedureName,
		SPECIALTY,
		CPTCODE,
		FUNDINGMGNT, --SDS1
		COUNT_F AS AVAILMENTS_COUNT_F,
		COUNT_A AS AVAILMENTS_COUNT_A,
		COUNT_NULL AS AVAILMENTS_COUNT_NULL,
		MYH_RATE,
		ACCOUNTTYPE,
		ConsideredAs,
		COUNT_F,
		COUNT_A,
		COUNT_NULL,
		NEARBY_RATE,
		TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		ISNULL(TARGET_RATE,0) AS TARGET_RATE,
		CONVERT(NUMERIC(19,5),ISNULL(WKTARGET_RATE,0)) AS WKTARGET_RATE,
		ISNULL(TARGET_CENSUS,0) AS TARGET_CENSUS,
		ISNULL(WKTARGET_CENSUS,0) * @NOOFDAYS AS WKTARGET_CENSUS,
		@CURRWEEK AS HEADER,
		@WEEKCOUNT AS WEEK_COUNT
	INTO #TEMP_AVAILMENT_CURRENTWK_PRE_INCLUSIVE
	FROM #TEMP_WEEKLYTARGET_FINAL WITH(NOLOCK)
	WHERE CONVERT(DATE,DATETIMEQUEUED) = CONVERT(DATE,@DATETODAY)

	--AVAILMENT CURRENT DAY (1) EXCLUSIVE
	SELECT DATETIMEQUEUED,
		trxnnumber,
		BRANCHNAME AS BRANCHNAME,
		ItemClass,
		TRANSACTIONTYPE,
		AVAILMENT_CENSUS,
		ProcedureName,
		SPECIALTY,
		CPTCODE,
		FUNDINGMGNT, --SDS1
		COUNT_F AS AVAILMENTS_COUNT_F,
		COUNT_A AS AVAILMENTS_COUNT_A,
		COUNT_NULL AS AVAILMENTS_COUNT_NULL,
		MYH_RATE,
		ACCOUNTTYPE,
		ConsideredAs,
		NEARBY_RATE,
		TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		ISNULL(TARGET_RATE,0) AS TARGET_RATE,
		CONVERT(NUMERIC(19,5),ISNULL(WKTARGET_RATE,0)) AS WKTARGET_RATE,
		ISNULL(TARGET_CENSUS,0) AS TARGET_CENSUS,
		ISNULL(WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		@CURRWEEK AS HEADER,
		@WEEKCOUNT AS WEEK_COUNT
	INTO #TEMP_AVAILMENT_CURRENTWK_PRE_EXCLUSIVE 
	FROM #TEMP_WEEKLYTARGET_FINAL_EXCLUSIVE WITH(NOLOCK)
	WHERE CONVERT(DATE,DATETIMEQUEUED) = CONVERT(DATE,@DATETODAY)

	--GET THE AVAILERS COUNT FOR ACU/ECU
	--AVAILMENT INCLUSIVE FOR ACU & ECU	
	SELECT
		BRANCHNAME,
		ItemClass,
		SUM(AVAILMENT_CENSUS) AS AVAILMENT_CENSUS,
		SUM(MYH_RATE) AS MYH_RATE,
		ACCOUNTTYPE,
		ConsideredAs,
		SUM(A.AVAILMENTS_COUNT_F) AS AVAILMENTS_COUNT_F,
		SUM(A.AVAILMENTS_COUNT_A) AS AVAILMENTS_COUNT_A,
		SUM(A.AVAILMENTS_COUNT_NULL) AS AVAILMENTS_COUNT_NULL,
		SUM(NEARBY_RATE) AS NEARBY_RATE,
		SUM(TOTALCOST) AS TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		TARGET_RATE,
		WKTARGET_RATE,
		TARGET_CENSUS,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT
	INTO #TEMP_AVAILMENT_CURRENTWK_INC
	FROM #TEMP_AVAILMENT_CURRENTWK_PRE_INCLUSIVE WITH(NOLOCK)
	WHERE ItemClass NOT IN ('ACU','ECU')
	GROUP BY BRANCHNAME,
		ItemClass,
		ACCOUNTTYPE,
		ConsideredAs,
		MONTH_NAME,
		NOOFDAYS,
		TARGET_RATE,
		WKTARGET_RATE,
		TARGET_CENSUS,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT
		
	UNION

	SELECT
		A.BRANCHNAME,
		A.ItemClass,
		SUM(B.PRIMAGOLD) + SUM(B.PRIMASILVER) + SUM(B.NONPRIMA) AS AVAILMENT_CENSUS,
		COUNT(DISTINCT A.TRXNNUMBER) * A.MYH_RATE AS MYH_RATE,
		ACCOUNTTYPE,
		A.ConsideredAs,
		SUM(A.AVAILMENTS_COUNT_F) AS AVAILMENTS_COUNT_F,
		SUM(A.AVAILMENTS_COUNT_A) AS AVAILMENTS_COUNT_A,
		SUM(A.AVAILMENTS_COUNT_NULL) AS AVAILMENTS_COUNT_NULL,
		COUNT(DISTINCT A.TRXNNUMBER) * A.NEARBY_RATE AS NEARBY_RATE,
		COUNT(DISTINCT A.TRXNNUMBER) * A.TOTALCOST AS TOTALCOST,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.TARGET_RATE,
		A.WKTARGET_RATE,
		A.TARGET_CENSUS,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT
	FROM #TEMP_AVAILMENT_CURRENTWK_PRE_INCLUSIVE A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_FINAL B WITH(NOLOCK) 
		ON B.BranchName = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass 
		AND B.ConsideredAs = A.ConsideredAs
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		A.NEARBY_RATE,
		A.TOTALCOST,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.TARGET_RATE,
		A.WKTARGET_RATE,
		A.TARGET_CENSUS,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT

	--EXCLUSIVE	
	SELECT
		BRANCHNAME,
		ItemClass,
		SUM(AVAILMENT_CENSUS) AS AVAILMENT_CENSUS,
		SUM(MYH_RATE) AS MYH_RATE,
		ACCOUNTTYPE,
		ConsideredAs,
		SUM(A.AVAILMENTS_COUNT_F) AS AVAILMENTS_COUNT_F,
		SUM(A.AVAILMENTS_COUNT_A) AS AVAILMENTS_COUNT_A,
		SUM(A.AVAILMENTS_COUNT_NULL) AVAILMENTS_COUNT_NULL,
		SUM(NEARBY_RATE) AS NEARBY_RATE,
		SUM(TOTALCOST) AS TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		TARGET_RATE,
		WKTARGET_RATE,
		TARGET_CENSUS,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT
	INTO #TEMP_AVAILMENT_CURRENTWK_EXC
	FROM #TEMP_AVAILMENT_CURRENTWK_PRE_EXCLUSIVE WITH(NOLOCK)
	WHERE ItemClass NOT IN ('ACU','ECU')
	GROUP BY BRANCHNAME,
		ItemClass,
		ACCOUNTTYPE,
		ConsideredAs,
		MONTH_NAME,
		NOOFDAYS,
		TARGET_RATE,
		WKTARGET_RATE,
		TARGET_CENSUS,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT

	UNION

	SELECT
		A.BRANCHNAME,
		A.ItemClass,
		SUM(B.NONPRIMA) AS AVAILMENT_CENSUS,
		COUNT(DISTINCT A.TRXNNUMBER) * A.MYH_RATE AS MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		SUM(A.AVAILMENTS_COUNT_F) AS AVAILMENTS_COUNT_F,
		SUM(A.AVAILMENTS_COUNT_A) AS AVAILMENTS_COUNT_A,
		SUM(A.AVAILMENTS_COUNT_NULL) AVAILMENTS_COUNT_NULL,
		COUNT(DISTINCT A.TRXNNUMBER) * A.NEARBY_RATE AS NEARBY_RATE,
		COUNT(DISTINCT A.TRXNNUMBER) * A.TOTALCOST AS TOTALCOST,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.TARGET_RATE,
		A.WKTARGET_RATE,
		A.TARGET_CENSUS,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT
	FROM #TEMP_AVAILMENT_CURRENTWK_PRE_EXCLUSIVE A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_FINAL B WITH(NOLOCK) 
		ON B.BranchName = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass 
		AND B.ConsideredAs = A.ConsideredAs
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		A.NEARBY_RATE,
		A.TOTALCOST,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.TARGET_RATE,
		A.WKTARGET_RATE,
		A.TARGET_CENSUS,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT
--GET THE AVAILERS COUNT FOPR ACU/ECU')

	--GET THE WEEKLY TARGET RATE
	--AVAILMENT INCLUSIVE CURRENT DAY (FINAL)
	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE
				CASE WHEN A.ItemClass = 'LABORATORY' THEN CONVERT(NUMERIC(19,5),(ISNULL(SUBTOTAL_AVAILERS,0) / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
					ELSE CONVERT(NUMERIC(19,5),(SUM(ISNULL(A.AVAILMENT_CENSUS,0)) / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
				END 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE (SUM(A.NEARBY_RATE) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100 
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
		,ISNULL(C.DAILY_CAPACITY,0) AS DAILY_CAPACITY,
		CASE WHEN ISNULL(C.DAILY_CAPACITY,0) = 0 THEN 0
			ELSE 
				CASE WHEN A.ItemClass = 'LABORATORY' THEN CONVERT(NUMERIC(19,5),(B.SUBTOTAL_AVAILERS / CONVERT(NUMERIC(19,5),ISNULL(C.DAILY_CAPACITY,0))) * 100) 
					ELSE CONVERT(NUMERIC(19,5), (CONVERT(NUMERIC(19,5),SUM(A.AVAILMENT_CENSUS)) / CONVERT(NUMERIC(19,5),ISNULL(C.DAILY_CAPACITY,0)) * 100))
				END
		END AS DAILY_CAPACITY_PERCENT
	INTO #TEMP_AVAILMENT_CURRENTWK_FINAL_INC
	FROM #TEMP_AVAILMENT_CURRENTWK_INC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_SUBTOTAL B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = 'LABORATORY'
	LEFT JOIN dbo.TBL_MHSI_PCC_CAPACITY C WITH(NOLOCK)
		ON C.BRANCHNAME = A.BRANCHNAME COLLATE DATABASE_DEFAULT
	    AND C.ItemClass = (
			CASE 
				WHEN A.ItemClass = 'HEART - ECG' THEN 'ECG'
				WHEN A.ItemClass = 'HEART - ECHO' THEN '2D ECHO'
				WHEN A.ItemClass = 'HEART - TREADMILL' THEN 'TREADMILL'
				WHEN A.ItemClass = 'XRAY' THEN 'X-RAY'
				ELSE A.ItemClass
			END
		) COLLATE DATABASE_DEFAULT
	WHERE A.ItemClass NOT IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS
		,C.DAILY_CAPACITY

	UNION

	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE CONVERT(NUMERIC(19,5),(ISNULL(SUBTOTAL_AVAILERS,0) / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE ((SUM(A.NEARBY_RATE)) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
		,ISNULL(C.DAILY_CAPACITY,0) AS DAILY_CAPACITY,
		CASE WHEN ISNULL(C.DAILY_CAPACITY,0) = 0 THEN 0
			ELSE CONVERT(NUMERIC(19,5), (CONVERT(NUMERIC(19,5),SUM(A.AVAILMENT_CENSUS)) / CONVERT(NUMERIC(19,5),ISNULL(C.DAILY_CAPACITY,0)) * 100))
		END AS DAILY_CAPACITY_PERCENT
	FROM #TEMP_AVAILMENT_CURRENTWK_INC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_SUBTOTAL B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass
	LEFT JOIN dbo.TBL_MHSI_PCC_CAPACITY C WITH(NOLOCK)
		ON C.BRANCHNAME = A.BRANCHNAME COLLATE DATABASE_DEFAULT
		AND C.ItemClass = A.ItemClass COLLATE DATABASE_DEFAULT
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS
		,C.DAILY_CAPACITY

	-- AVAILMENT CURRENT WEEK FINAL EXCLUSIVE FOR ITEM CLASSES EXCEPT ACU & ECU	
	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE
				CASE WHEN A.ItemClass = 'LABORATORY' THEN CONVERT(NUMERIC(19,5),(ISNULL(B.SUBTOTAL_AVAILERS,0) / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
					ELSE CONVERT(NUMERIC(19,5),(SUM(ISNULL(A.AVAILMENT_CENSUS,0)) / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
				END 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE (SUM(A.NEARBY_RATE) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100 
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
		,ISNULL(C.DAILY_CAPACITY,0) AS DAILY_CAPACITY,
		CASE WHEN ISNULL(C.DAILY_CAPACITY,0) = 0 THEN 0
			ELSE 
				CASE WHEN A.ItemClass = 'LABORATORY' THEN CONVERT(NUMERIC(19,5),(B.SUBTOTAL_AVAILERS / (CONVERT(NUMERIC(19,5),C.DAILY_CAPACITY))) * 100) 
					ELSE CONVERT(NUMERIC(19,5), (CONVERT(NUMERIC(19,5),SUM(A.AVAILMENT_CENSUS)) / (CONVERT(NUMERIC(19,5),C.DAILY_CAPACITY)) * 100))
				END
		END AS DAILY_CAPACITY_PERCENT
	INTO #TEMP_AVAILMENT_CURRENTWK_FINAL_EXC 
	FROM #TEMP_AVAILMENT_CURRENTWK_EXC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_SUBTOTAL B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = 'LABORATORY'
	LEFT JOIN DBO.TBL_MHSI_PCC_CAPACITY C WITH(NOLOCK)
		ON C.BRANCHNAME = A.BRANCHNAME COLLATE DATABASE_DEFAULT
	    AND C.ItemClass = (
			CASE 
				WHEN A.ItemClass = 'HEART - ECG' THEN 'ECG'
				WHEN A.ItemClass = 'HEART - ECHO' THEN '2D ECHO'
				WHEN A.ItemClass = 'HEART - TREADMILL' THEN 'TREADMILL'
				WHEN A.ItemClass = 'XRAY' THEN 'X-RAY'
				ELSE A.ItemClass
			END
		) COLLATE DATABASE_DEFAULT
	WHERE A.ItemClass NOT IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS
		,C.DAILY_CAPACITY

	UNION

	-- AVAILMENT CURRENT WEEK FINAL EXCLUSIVE FOR ACU & ECU
	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE CONVERT(NUMERIC(19,5),(ISNULL(SUBTOTAL_AVAILERS,0) / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE ((SUM(A.NEARBY_RATE)) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
		,ISNULL(C.DAILY_CAPACITY,0) AS DAILY_CAPACITY,
		CASE WHEN ISNULL(C.DAILY_CAPACITY,0) = 0 THEN 0
			ELSE CONVERT(NUMERIC(19,5), (CONVERT(NUMERIC(19,5),SUM(A.AVAILMENT_CENSUS)) / (CONVERT(NUMERIC(19,5),C.DAILY_CAPACITY)) * 100)) 
		END AS DAILY_CAPACITY_PERCENT
	FROM #TEMP_AVAILMENT_CURRENTWK_EXC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_SUBTOTAL B WITH(NOLOCK)
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass
	LEFT JOIN DBO.TBL_MHSI_PCC_CAPACITY C WITH(NOLOCK)
		ON C.BRANCHNAME = A.BRANCHNAME COLLATE DATABASE_DEFAULT
		AND C.ItemClass = A.ItemClass COLLATE DATABASE_DEFAULT
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS
		,C.DAILY_CAPACITY
--GET THE WEEKLY TARGET RATE

	-- CURRENT DAY EXCLUSIVE & INCLUSIVE
	-- INCLUSIVE	
	SELECT IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		SUM(A.AVAILMENT_COUNT_F) AS COUNT_F,		--SDS1
		SUM(A.AVAILMENT_COUNT_A) AS COUNT_A,		--SDS1
		SUM(A.AVAILMENT_COUNT_NULL) AS COUNT_NULL,	--SDS1
		SUM(A.AVAILMENT_CENSUS) AS TOTAL_CENSUS, 
		SUM(A.MYH_RATE) AS TOTAL_MYH_RATE, 
		SUM(A.NEARBY_RATE) AS TOTAL_NEARBY_RATE,
		SUM(A.TOTALCOST) AS TOTAL_MHSI_COST,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		ISNULL(C.NONPRIMA,0) AS NONPRIMA,
		ISNULL(C.PRIMAGOLD,0) AS PRIMAGOLD,
		ISNULL(C.PRIMASILVER,0) AS PRIMASILVER,
		ISNULL(C.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS,
		B.DAILY_CAPACITY,
		B.DAILY_CAPACITY_PERCENT,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT
		,@YEAR AS REPORT_YEAR
	INTO #TEMP_CURRENT_WEEK_INC
	FROM #TEMP_BRANCH_ITEMCLASS IC WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILMENT_CURRENTWK_INC A WITH(NOLOCK) 
		ON A.BRANCHNAME = IC.BranchName
		AND A.ItemClass = IC.ItemClass
		AND A.ConsideredAs = IC.ConsideredAs
	INNER JOIN #TEMP_AVAILMENT_CURRENTWK_FINAL_INC B WITH(NOLOCK) 
		ON B.BRANCHNAME = IC.BRANCHNAME
		AND B.ItemClass = IC.ItemClass
	LEFT JOIN #TEMP_AVAILER_CURRWK_FINAL C WITH(NOLOCK) 
		ON C.BRANCHNAME = IC.BRANCHNAME
		AND C.ItemClass = IC.ItemClass
		AND C.ConsideredAs = IC.CONSIDEREDAS
	GROUP BY IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		C.NONPRIMA,
		C.PRIMAGOLD,
		C.PRIMASILVER,
		C.SUBTOTAL_AVAILERS,
		B.DAILY_CAPACITY,
		B.DAILY_CAPACITY_PERCENT,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT

	-- EXCLUSIVE
	SELECT IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		SUM(A.AVAILERS_COUNT_F) AS AVAILERS_COUNT_F,
		SUM(A.AVAILERS_COUNT_A) AS AVAILERS_COUNT_A,
		SUM(A.AVAILERS_COUNT_NULL) AS AVAILERS_COUNT_NULL,
		SUM(A.AVAILMENT_CENSUS) AS TOTAL_CENSUS, 
		SUM(A.MYH_RATE) AS TOTAL_MYH_RATE, 
		SUM(A.NEARBY_RATE) AS TOTAL_NEARBY_RATE,
		SUM(A.TOTALCOST) AS TOTAL_MHSI_COST,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		ISNULL(C.NONPRIMA,0) AS NONPRIMA,
		ISNULL(C.PRIMAGOLD,0) AS PRIMAGOLD,
		ISNULL(C.PRIMASILVER,0) AS PRIMASILVER,
		ISNULL(C.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS,
		B.DAILY_CAPACITY,
		B.DAILY_CAPACITY_PERCENT,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT
		,@YEAR AS REPORT_YEAR
	INTO #TEMP_CURRENT_WEEK_EXC
	FROM #TEMP_BRANCH_ITEMCLASS IC WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILMENT_CURRENTWK_EXC A WITH(NOLOCK)
	ON A.BRANCHNAME = IC.BranchName
	AND A.ItemClass = IC.ItemClass
	AND A.ConsideredAs = IC.ConsideredAs
	INNER JOIN #TEMP_AVAILMENT_CURRENTWK_FINAL_EXC B WITH(NOLOCK) 
	ON B.BRANCHNAME = IC.BRANCHNAME
	AND B.ItemClass = IC.ItemClass
	LEFT JOIN #TEMP_AVAILER_CURRWK_FINAL C WITH(NOLOCK)
	ON C.BRANCHNAME = IC.BRANCHNAME
	AND C.ItemClass = IC.ItemClass
	AND C.ConsideredAs = IC.CONSIDEREDAS
	GROUP BY IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		C.NONPRIMA,
		C.PRIMAGOLD,
		C.PRIMASILVER,
		C.SUBTOTAL_AVAILERS,
		B.DAILY_CAPACITY,
		B.DAILY_CAPACITY_PERCENT,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT


	-- MONTH TO DATE - AVAILERS MTD 
	SELECT
		CASE WHEN ITEMCLASS IN ('ACU','ECU') THEN COUNT(DISTINCT trxnnumber) 
		ELSE COUNT(trxnnumber)
		END AS TOTAL_AVAILERS,  
		[ItemClass],
		BranchName, 
		ACCOUNTTYPE,
		ConsideredAs,
		MONTH_NAME
		,@MONTHRANGE AS HEADER,
		@WEEKCOUNT AS WEEK_COUNT
	INTO #TEMP_AVAILER_MTD
	FROM #TEMP_AVAILERS_SPECIALTY WITH(NOLOCK)
	WHERE CONVERT(DATE,DATETIMEQUEUED) BETWEEN @WMOTHFROM AND @DATETO
	GROUP BY 
		[ItemClass],
		BranchName, 
		ACCOUNTTYPE,
		ConsideredAs,
		MONTH_NAME

	SELECT ItemClass, 
		BRANCHNAME, 
		ConsideredAs, 
		MONTH_NAME, 
		HEADER, 
		WEEK_COUNT,
		SUM(TOTAL_AVAILERS) AS SUBTOTAL_AVAILERS
	INTO #TEMP_AVAILER_MTD_SUBTOTAL
	FROM #TEMP_AVAILER_MTD WITH(NOLOCK)
	GROUP BY ItemClass, 
		BRANCHNAME, 
		ConsideredAs, 
		MONTH_NAME, 
		HEADER, 
		WEEK_COUNT

	-- FINAL
	SELECT A.BRANCHNAME,
		A.ItemClass,
		A.ConsideredAs,
		SUM(ISNULL(A.NONPRIMA,0)) AS NONPRIMA,
		SUM(ISNULL(A.PRIMAGOLD,0)) AS PRIMAGOLD,
		SUM(ISNULL(A.PRIMASILVER,0)) AS PRIMASILVER,
		B.SUBTOTAL_AVAILERS
	INTO #TEMP_AVAILER_MTD_FINAL
	FROM (
		SELECT ItemClass, 
			CASE WHEN ACCOUNTTYPE = 'NON PRIMA' THEN SUM(TOTAL_AVAILERS) END AS NONPRIMA,
			CASE WHEN ACCOUNTTYPE = 'PRIMA GOLD' THEN SUM(TOTAL_AVAILERS) END AS PRIMAGOLD,
			CASE WHEN ACCOUNTTYPE = 'PRIMA SILVER' THEN SUM(TOTAL_AVAILERS) END AS PRIMASILVER, 
			ACCOUNTTYPE,
			BRANCHNAME,
			ConsideredAs
		FROM #TEMP_AVAILER_MTD WITH(NOLOCK) 
		GROUP BY BRANCHNAME,
			ItemClass,
			ConsideredAs,
			ACCOUNTTYPE
		) A
	INNER JOIN #TEMP_AVAILER_MTD_SUBTOTAL B WITH(NOLOCK) 
	ON B.BRANCHNAME = A.BRANCHNAME 
	AND B.ItemClass = A.ItemClass 
	AND B.ConsideredAs = A.ConsideredAs
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.ConsideredAs,
		B.SUBTOTAL_AVAILERS
--AVAILERS

	-- AVAILMENT MTD
	-- AVAILMENT INC (1)
	SELECT A.DATETIMEQUEUED,
		A.trxnnumber,
		A.BranchName AS BRANCHNAME,
		A.ItemClass,
		A.TRANSACTIONTYPE,
		A.AVAILMENT_CENSUS,
		A.COUNT_F AS AVAILMENTS_COUNT_F,
		A.COUNT_A AS AVAILMENTS_COUNT_A,
		A.COUNT_NULL AS AVAILMENTS_COUNT_NULL,
		A.ProcedureName,
		A.SPECIALTY,
		A.CPTCODE,
		A.TOTALCOST,
		A.MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		A.NEARBY_RATE,
		A.MONTH_NAME,
		A.NOOFDAYS,
		ISNULL(A.TARGET_RATE,0) AS WKTARGET_RATE,
		ISNULL(A.TARGET_CENSUS,0) AS WKTARGET_CENSUS,
		@MONTHRANGE AS HEADER,
		@WEEKCOUNT AS WEEK_COUNT
	INTO #TEMP_AVAILMENT_MTD_PRE_INCLUSIVE
	FROM #TEMP_WEEKLYTARGET_FINAL A WITH(NOLOCK)
	WHERE CONVERT(DATE,DATETIMEQUEUED) BETWEEN @WMOTHFROM AND @DATETO

	-- AVAILMENT EXC (1)
	SELECT A.DATETIMEQUEUED,
		A.trxnnumber,
		A.BranchName AS BRANCHNAME,
		A.ItemClass,
		A.TRANSACTIONTYPE,
		A.AVAILMENT_CENSUS,
		A.COUNT_F AS AVAILERS_COUNT_F,
		A.COUNT_A AS AVAILERS_COUNT_A,
		A,COUNT_NULL AS AVAILERS_COUNT_NULL,
		A.ProcedureName,
		A.SPECIALTY,
		A.CPTCODE,
		A.TOTALCOST,
		A.MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		A.NEARBY_RATE,
		A.MONTH_NAME,
		A.NOOFDAYS,
		ISNULL(A.TARGET_RATE,0) AS WKTARGET_RATE,
		ISNULL(A.TARGET_CENSUS,0) AS WKTARGET_CENSUS,
		@MONTHRANGE AS HEADER,
		@WEEKCOUNT AS WEEK_COUNT
	INTO #TEMP_AVAILMENT_MTD_PRE_EXCLUSIVE
	FROM #TEMP_WEEKLYTARGET_FINAL_EXCLUSIVE A WITH(NOLOCK)
	WHERE CONVERT(DATE,DATETIMEQUEUED) BETWEEN @WMOTHFROM AND @DATETO

	--INCLUSIVE (2)
	SELECT
		BRANCHNAME,
		ItemClass,
		SUM(AVAILMENT_CENSUS) AS AVAILMENT_CENSUS,
		SUM(MYH_RATE) AS MYH_RATE,
		ACCOUNTTYPE,
		ConsideredAs,
		SUM(NEARBY_RATE) AS NEARBY_RATE,
		SUM(TOTALCOST) AS TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		WKTARGET_RATE,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT
	INTO #TEMP_AVAILMENT_MTD_INC
	FROM #TEMP_AVAILMENT_MTD_PRE_INCLUSIVE WITH(NOLOCK)
	WHERE ItemClass NOT IN ('ACU','ECU')
	GROUP BY BRANCHNAME,
		ItemClass,
		ACCOUNTTYPE,
		ConsideredAs,
		MONTH_NAME,
		NOOFDAYS,
		WKTARGET_RATE,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT

	UNION

	SELECT
		A.BRANCHNAME,
		A.ItemClass,
		SUM(B.PRIMAGOLD) + SUM(B.PRIMASILVER) + SUM(B.NONPRIMA) AS AVAILMENT_CENSUS,
		COUNT(DISTINCT A.TRXNNUMBER) * MYH_RATE AS MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		COUNT(DISTINCT A.TRXNNUMBER) * A.NEARBY_RATE AS NEARBY_RATE,
		COUNT(DISTINCT A.TRXNNUMBER) * A.TOTALCOST AS TOTALCOST,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.WKTARGET_RATE,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT
	FROM #TEMP_AVAILMENT_MTD_PRE_INCLUSIVE A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_FINAL B WITH(NOLOCK) 
		ON B.BranchName = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass 
		AND B.ConsideredAs = A.ConsideredAs
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		A.NEARBY_RATE,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.WKTARGET_RATE,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT
		,A.TOTALCOST

	-- AVAILMENT EXC (2)	
	SELECT
		BRANCHNAME,
		ItemClass,
		SUM(AVAILMENT_CENSUS) AS AVAILMENT_CENSUS,
		SUM(MYH_RATE) AS MYH_RATE,
		ACCOUNTTYPE,
		ConsideredAs,
		SUM(NEARBY_RATE) AS NEARBY_RATE,
		SUM(TOTALCOST) AS TOTALCOST,
		MONTH_NAME,
		NOOFDAYS,
		WKTARGET_RATE,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT
	INTO #TEMP_AVAILMENT_MTD_EXC
	FROM #TEMP_AVAILMENT_MTD_PRE_EXCLUSIVE WITH(NOLOCK)
	WHERE ItemClass NOT IN ('ACU','ECU')
	GROUP BY BRANCHNAME,
		ItemClass,
		ACCOUNTTYPE,
		ConsideredAs,
		MONTH_NAME,
		NOOFDAYS,
		WKTARGET_RATE,
		WKTARGET_CENSUS,
		HEADER,
		WEEK_COUNT

	UNION

	SELECT
		A.BRANCHNAME,
		A.ItemClass,
		SUM(B.PRIMAGOLD) + SUM(B.PRIMASILVER) + SUM(B.NONPRIMA) AS AVAILMENT_CENSUS,
		COUNT(DISTINCT A.TRXNNUMBER) * MYH_RATE AS MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		COUNT(DISTINCT A.TRXNNUMBER) * A.NEARBY_RATE AS NEARBY_RATE,
		COUNT(DISTINCT A.TRXNNUMBER) * A.TOTALCOST AS TOTALCOST,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.WKTARGET_RATE,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT
	FROM #TEMP_AVAILMENT_MTD_PRE_EXCLUSIVE A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_CURRWK_FINAL B WITH(NOLOCK) 
		ON B.BranchName = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass 
		AND B.ConsideredAs = A.ConsideredAs
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MYH_RATE,
		A.ACCOUNTTYPE,
		A.ConsideredAs,
		A.NEARBY_RATE,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.WKTARGET_RATE,
		A.WKTARGET_CENSUS,
		A.HEADER,
		A.WEEK_COUNT
		,A.TOTALCOST

	--INCLUSIVE (3/FINAL)
	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE
				CASE WHEN A.ItemClass = 'LABORATORY' 
						THEN CONVERT(NUMERIC(19,5), CONVERT(NUMERIC(19,5),(B.SUBTOTAL_AVAILERS)) / CONVERT(NUMERIC(19,5),(ISNULL(A.WKTARGET_CENSUS,0))) * 100 )
					ELSE  CONVERT(NUMERIC(19,5), CONVERT(NUMERIC(19,5),(SUM(A.AVAILMENT_CENSUS))) / CONVERT(NUMERIC(19,5),(ISNULL(A.WKTARGET_CENSUS,0))) * 100)
				END 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE (SUM(A.NEARBY_RATE) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100 
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
	INTO #TEMP_AVAILMENT_MTD_FINAL_INC
	FROM #TEMP_AVAILMENT_MTD_INC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_MTD_SUBTOTAL B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = 'LABORATORY'
	WHERE A.ItemClass NOT IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS
		
	UNION

	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE CONVERT(NUMERIC(19,5),(SUBTOTAL_AVAILERS / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE (SUM(A.NEARBY_RATE) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100 
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
	FROM #TEMP_AVAILMENT_MTD_INC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_MTD_SUBTOTAL B WITH(NOLOCK)
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS

	--EXCLUSIVE (3/FINAL)
	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE
				CASE WHEN A.ItemClass = 'LABORATORY' 
						THEN CONVERT(NUMERIC(19,5), CONVERT(NUMERIC(19,5),(B.SUBTOTAL_AVAILERS)) / CONVERT(NUMERIC(19,5),(ISNULL(A.WKTARGET_CENSUS,0))) * 100 )
					ELSE  CONVERT(NUMERIC(19,5), CONVERT(NUMERIC(19,5),(SUM(A.AVAILMENT_CENSUS))) / CONVERT(NUMERIC(19,5),(ISNULL(A.WKTARGET_CENSUS,0))) * 100)
				END 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE (SUM(A.NEARBY_RATE) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100 
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
	INTO #TEMP_AVAILMENT_MTD_FINAL_EXC
	FROM #TEMP_AVAILMENT_MTD_EXC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_MTD_SUBTOTAL B WITH(NOLOCK)
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = 'LABORATORY'
	WHERE A.ItemClass NOT IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS
		
	UNION

	SELECT 
		A.BRANCHNAME,
		A.ItemClass,
		ISNULL(A.WKTARGET_CENSUS,0) AS WKTARGET_CENSUS,
		CASE WHEN ISNULL(A.WKTARGET_CENSUS,0) = 0 THEN 0
			ELSE CONVERT(NUMERIC(19,5),(SUBTOTAL_AVAILERS / ISNULL(A.WKTARGET_CENSUS,0)) * 100) 
		END AS WKTARGET_CENSUS_PERCENT,
		CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0)) AS WKTARGET_RATE,
		CASE WHEN ISNULL(A.WKTARGET_RATE,0) = 0 THEN 0
			ELSE (SUM(A.NEARBY_RATE) / CONVERT(NUMERIC(19,5),ISNULL(A.WKTARGET_RATE,0))) * 100 
		END AS WKTARGET_RATE_PERCENT,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		ISNULL(B.SUBTOTAL_AVAILERS,0) AS SUBTOTAL_AVAILERS
	FROM #TEMP_AVAILMENT_MTD_EXC A WITH(NOLOCK)
	LEFT JOIN #TEMP_AVAILER_MTD_SUBTOTAL B WITH(NOLOCK) 
		ON B.BRANCHNAME = A.BRANCHNAME 
		AND B.ItemClass = A.ItemClass
	WHERE A.ItemClass IN ('ACU','ECU')
	GROUP BY A.BRANCHNAME,
		A.ItemClass,
		A.MONTH_NAME,
		A.NOOFDAYS,
		A.HEADER,
		A.WEEK_COUNT,
		A.WKTARGET_CENSUS,
		A.WKTARGET_RATE,
		B.SUBTOTAL_AVAILERS

	-- MTD EXC & INC NEARBY FACILITY RATE
	--INCLUSIVE
	SELECT 
		IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		SUM(A.AVAILMENT_CENSUS) AS TOTAL_CENSUS, 
		SUM(A.MYH_RATE) AS TOTAL_MYH_RATE, 
		SUM(A.NEARBY_RATE) AS TOTAL_NEARBY_RATE, 
		SUM(A.TOTALCOST) AS TOTALCOST,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		C.NONPRIMA,
		C.PRIMAGOLD,
		C.PRIMASILVER,
		C.SUBTOTAL_AVAILERS,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT
		,@YEAR AS REPORT_YEAR
	INTO #TEMP_MTD_INCLUSIVE 
	FROM #TEMP_BRANCH_ITEMCLASS IC WITH(NOLOCK) 
	LEFT JOIN #TEMP_AVAILMENT_MTD_INC A WITH(NOLOCK) 
		ON A.BRANCHNAME = IC.BranchName
		AND A.ItemClass = IC.ItemClass
		AND A.ConsideredAs = IC.ConsideredAs
	INNER JOIN #TEMP_AVAILMENT_MTD_FINAL_INC B WITH(NOLOCK)
		ON B.BRANCHNAME = IC.BRANCHNAME
		AND B.ItemClass = IC.ItemClass
	LEFT JOIN #TEMP_AVAILER_MTD_FINAL C WITH(NOLOCK)
		ON C.BRANCHNAME = IC.BRANCHNAME
		AND C.ItemClass = IC.ItemClass
		AND C.ConsideredAs = IC.CONSIDEREDAS
	GROUP BY 
		IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		C.NONPRIMA,
		C.PRIMAGOLD,
		C.PRIMASILVER,
		C.SUBTOTAL_AVAILERS,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT

	--EXCLUSIVE
	SELECT 
		IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		SUM(A.AVAILMENT_CENSUS) AS TOTAL_CENSUS, 
		SUM(A.MYH_RATE) AS TOTAL_MYH_RATE, 
		SUM(A.NEARBY_RATE) AS TOTAL_NEARBY_RATE, 
		SUM(A.TOTALCOST) AS TOTALCOST,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		C.NONPRIMA,
		C.PRIMAGOLD,
		C.PRIMASILVER,
		C.SUBTOTAL_AVAILERS,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT
		,@YEAR AS REPORT_YEAR
	INTO #TEMP_MTD_EXCLUSIVE
	FROM #TEMP_BRANCH_ITEMCLASS IC WITH(NOLOCK) 
	LEFT JOIN #TEMP_AVAILMENT_MTD_EXC A WITH(NOLOCK) 
		ON A.BRANCHNAME = IC.BranchName
		AND A.ItemClass = IC.ItemClass
		AND A.ConsideredAs = IC.ConsideredAs
	INNER JOIN #TEMP_AVAILMENT_MTD_FINAL_EXC B WITH(NOLOCK) 
		ON B.BRANCHNAME = IC.BRANCHNAME AND 
		B.ItemClass = IC.ItemClass
	LEFT JOIN #TEMP_AVAILER_MTD_FINAL C WITH(NOLOCK)
		ON C.BRANCHNAME = IC.BRANCHNAME
		AND C.ItemClass = IC.ItemClass
		AND C.ConsideredAs = IC.CONSIDEREDAS
	GROUP BY 
		IC.BRANCHNAME,
		IC.ItemClass,
		IC.ConsideredAs,
		B.WKTARGET_CENSUS,
		B.WKTARGET_CENSUS_PERCENT,
		B.WKTARGET_RATE,
		B.WKTARGET_RATE_PERCENT,
		C.NONPRIMA,
		C.PRIMAGOLD,
		C.PRIMASILVER,
		C.SUBTOTAL_AVAILERS,
		A.MONTH_NAME,
		A.HEADER,
		A.NOOFDAYS,
		A.WEEK_COUNT
--MONTH TO DATE

	--MONTH TO DATE EXC&INC
	--NEARBY FACILITY RATE AND MYH RATE
	SELECT 
		A.BranchName,
		A.ItemClass,
		A.ConsideredAs,
		ISNULL(A.TOTAL_CENSUS,0) AS CENSUS_INC,
		ISNULL(B.TOTAL_CENSUS,0) AS CENSUS_EXC,
		ISNULL(A.TOTAL_MYH_RATE,0) AS TOTAL_MYH_RATE_INC,
		ISNULL(B.TOTAL_MYH_RATE,0) AS TOTAL_MYH_RATE_EXC,
		ISNULL(A.TOTAL_NEARBY_RATE,0) AS TOTAL_NEARBY_RATE_INC,
		ISNULL(B.TOTAL_NEARBY_RATE,0) AS TOTAL_NEARBY_RATE_EXC,
		ISNULL(A.TOTALCOST,0) AS TOTAL_COST_WITHOUT_MARKUP_INC,
		ISNULL(B.TOTALCOST,0) AS TOTAL_COST_WITHOUT_MARKUP_EXC,
		A.NOOFDAYS,
		A.HEADER,
		A.MONTH_NAME,
		A.WEEK_COUNT,
		A.REPORT_YEAR
	INTO #TEMP_MTD
	FROM #TEMP_MTD_INCLUSIVE A WITH(NOLOCK)
	LEFT JOIN #TEMP_MTD_EXCLUSIVE B WITH(NOLOCK)
		ON B.BranchName = A.BranchName
		AND B.ItemClass = A.ItemClass
		AND B.ConsideredAs = A.ConsideredAs
	ORDER BY A.BranchName, A.ItemClass

	SELECT
		A.BranchName,
		A.ItemClass,
		A.ConsideredAs,
		A.AVAILMENTS_COUNT_F,
		A.AVAILMENTS_COUNT_A,
		A.AVAILMENTS_COUNT_NULL,
		A.AVAILERS_COUNT_F,
		A.AVAILERS_COUNT_A,
		A.AVAILERS_COUNT_NULL,
		CASE
			WHEN A.ItemClass IN ('ACU','ECU') THEN A.NONPRIMA
			ELSE ISNULL(A.TOTAL_CENSUS,0) 
		END AS CENSUS_INC,
		CASE 
			WHEN A.ItemClass IN ('ACU','ECU') THEN A.NONPRIMA
			ELSE ISNULL(B.TOTAL_CENSUS,0) 
		END AS CENSUS_EXC,
		ISNULL(A.TOTAL_MYH_RATE,0) AS TOTAL_MYH_RATE_INC, 
		ISNULL(B.TOTAL_MYH_RATE,0) AS TOTAL_MYH_RATE_EXC, 
		ISNULL(A.TOTAL_NEARBY_RATE,0) AS TOTAL_NEARBY_RATE_INC, 
		ISNULL(B.TOTAL_NEARBY_RATE,0) AS TOTAL_NEARBY_RATE_EXC, 
		ISNULL(A.TOTAL_MHSI_COST,0) AS TOTAL_MHSI_COST_INC, 
		ISNULL(B.TOTAL_MHSI_COST,0) AS TOTAL_MHSI_COST_EXC, 
		A.NONPRIMA, 
		A.PRIMAGOLD,  
		A.PRIMASILVER, 
		ISNULL(A.DAILY_CAPACITY,0) AS DAILY_CAPACITY,
		ISNULL(A.DAILY_CAPACITY_PERCENT,0) AS DAILY_CAPACITY_PERCENT,
		A.SUBTOTAL_AVAILERS, 
		A.TOTAL_MYH_RATE AS TOTAL_MYH_RATE_INC_MTD,
		(A.TOTAL_MYH_RATE - B.TOTAL_MYH_RATE) AS TOTAL_MYH_RATE_PRIMA, 
		B.TOTAL_MYH_RATE AS TOTAL_MYH_RATE_EXC_MTD, 
		A.TOTAL_NEARBY_RATE AS TOTAL_NEARBY_RATE_INC_MTD, 
		(A.TOTAL_NEARBY_RATE - B.TOTAL_NEARBY_RATE) AS TOTAL_NEARBY_RATE_PRIMA,
		B.TOTAL_NEARBY_RATE AS TOTAL_NEARBY_RATE_EXC_MTD,
		A.TOTAL_MHSI_COST AS TOTAL_COST_WITHOUT_MARKUP_INC_MTD,
		(A.TOTAL_MHSI_COST - B.TOTAL_MHSI_COST) AS TOTAL_COST_WITHOUT_MARKUP_PRIMA,
		B.TOTAL_MHSI_COST AS TOTAL_COST_WITHOUT_MARKUP_EXC_MTD,
		A.WKTARGET_CENSUS,
		A.NOOFDAYS,
		A.HEADER,
		A.MONTH_NAME,
		A.WEEK_COUNT,
		A.REPORT_YEAR
	INTO #TEMP_DATA_PRE
	FROM #TEMP_CURRENT_WEEK_INC A WITH(NOLOCK)
	LEFT JOIN #TEMP_CURRENT_WEEK_EXC B WITH(NOLOCK) 
		ON B.BranchName = A.BranchName
		AND B.ItemClass = A.ItemClass
		AND B.ConsideredAs = A.ConsideredAs
	LEFT JOIN #TEMP_MTD C WITH(NOLOCK) 
		ON C.BranchName = A.BranchName
		AND C.ItemClass = A.ItemClass
		AND C.ConsideredAs = A.ConsideredAs
	ORDER BY A.BranchName, A.ItemClass
	
	SELECT A.BranchName,
		A.ItemClass,
		SUM(A.CENSUS_INC) AS TOTAL_CENSUS_INC,						
		A.WKTARGET_CENSUS,
		CASE
			WHEN A.WKTARGET_CENSUS = 0 THEN 0
			WHEN A.ItemClass = 'LABORATORY' THEN
				(SUM(A.NONPRIMA+A.PRIMAGOLD+A.PRIMASILVER) / A.WKTARGET_CENSUS) * 100
			ELSE
				(SUM(A.CENSUS_INC) / A.WKTARGET_CENSUS) * 100
		END AS ACTUAL_CAPACITY
	INTO #TEMP_ACTUAL_CAPACITY
	FROM #TEMP_DATA_PRE A WITH(NOLOCK)
	GROUP BY A.ItemClass,
			A.BranchName,
			A.WKTARGET_CENSUS

	INSERT INTO #TBL_MHSI_Census_Daily_Report_Summary
	(
		BRANCHNAME
		,ITEMCLASS
		,CONSIDEREDAS
		,AVAILMENTS_CENSUS_FULLRISK
		,AVAILMENTS_CENSUS_ASO
		,AVAILMENTS_CENSUS_NULL
		,AVAILERS_CENSUS_FULLRISK
		,AVAILERS_CENSUS_ASO
		,AVAILERS_CENSUS_NULL
		,CENSUS_INC
		,CENSUS_EXC
		,FREQUENCY_TARGET
		,ACTUAL_CAPACITY
		,MAX_CAPACITY
		,ACTUAL_BASED_ON_MAX_CAP_PERCENT
		,TOTAL_MYH_RATE_INC_MTD							
		,TOTAL_MYH_RATE_PRIMA										
		,TOTAL_MYH_RATE_EXC_MTD									
		,TOTAL_NEARBY_RATE_INC_MTD							 					
		,TOTAL_NEARBY_RATE_PRIMA									
		,TOTAL_NEARBY_RATE_EXC_MTD							
		,TOTAL_COST_WITHOUT_MARKUP_INC_MTD					 		
		,TOTAL_COST_WITHOUT_MARKUP_PRIMA
		,TOTAL_COST_WITHOUT_MARKUP_EXC_MTD
		,NOOFDAYS
		,MONTH_NAME
		,CURRENT_DAY
		,CURRWKHEADER
		,MTD_HEADER
		,DATE_TODAY
		,WEEK_COUNT
		,REPORT_YEAR
		,SYSTEMDATE
	)
	SELECT
		C.BRANCH_DESC AS BRANCHNAME,											
		A.ItemClass,											
		A.ConsideredAs,	
		ISNULL(A.AVAILMENTS_COUNT_F,0) AS AVAILMENTS_COUNT_F,
		ISNULL(A.AVAILMENTS_COUNT_A,0) AS AVAILMENTS_COUNT_A,
		ISNULL(A.AVAILMENTS_COUNT_NULL,0) AS AVAILMENTS_COUNT_NULL,
		ISNULL(A.AVAILERS_COUNT_F,0) AS AVAILERS_COUNT_F,
		ISNULL(A.AVAILERS_COUNT_A,0) AS AVAILERS_COUNT_A,
		ISNULL(A.AVAILERS_COUNT_NULL,0) AS AVAILERS_COUNT_NULL,
		ISNULL(A.CENSUS_INC,0) AS CENSUS_INC,											
		ISNULL(A.CENSUS_EXC,0) AS CENSUS_EXC,	
		A.WKTARGET_CENSUS AS FREQUENCY_TARGET,						
		ISNULL(B.ACTUAL_CAPACITY,0) AS ACTUAL_CAPACITY,
		ISNULL(A.DAILY_CAPACITY,0) AS MAX_CAPACITY,						
		ISNULL(A.DAILY_CAPACITY_PERCENT,0) AS ACTUAL_BASED_ON_MAX_CAP_PERCENT,
		ISNULL(A.TOTAL_MYH_RATE_INC_MTD,0) AS TOTAL_MYH_RATE_INC_MTD,								
		ISNULL(A.TOTAL_MYH_RATE_PRIMA,0) AS TOTAL_MYH_RATE_PRIMA,										
		ISNULL(A.TOTAL_MYH_RATE_EXC_MTD,0) AS TOTAL_MYH_RATE_EXC_MTD,									
		ISNULL(A.TOTAL_NEARBY_RATE_INC_MTD,0) AS TOTAL_NEARBY_RATE_INC_MTD,
		ISNULL(A.TOTAL_NEARBY_RATE_PRIMA,0) AS TOTAL_NEARBY_RATE_PRIMA,									
		ISNULL(A.TOTAL_NEARBY_RATE_EXC_MTD,0) AS TOTAL_NEARBY_RATE_EXC_MTD,							
		ISNULL(A.TOTAL_COST_WITHOUT_MARKUP_INC_MTD,0) AS TOTAL_COST_WITHOUT_MARKUP_INC_MTD,
		ISNULL(A.TOTAL_COST_WITHOUT_MARKUP_PRIMA,0) AS TOTAL_COST_WITHOUT_MARKUP_PRIMA,
		ISNULL(A.TOTAL_COST_WITHOUT_MARKUP_EXC_MTD,0) AS TOTAL_COST_WITHOUT_MARKUP_EXC_MTD,
		A.NOOFDAYS,
		A.MONTH_NAME,
		@CURRDAY AS CURRENT_DAY,
		A.HEADER AS CURRWKHEADER,
		@MONTHRANGE AS MTHEADER,
		@DATETODAY AS DATE_TODAY,
		A.WEEK_COUNT,
		A.REPORT_YEAR
		,GETDATE() AS SYSTEMDATE
	FROM #TEMP_DATA_PRE A WITH(NOLOCK)
	LEFT JOIN #TEMP_ACTUAL_CAPACITY B WITH(NOLOCK)
		ON B.BranchName = A.BranchName
		AND B.ItemClass = A.ItemClass
	INNER JOIN #TEMP_BRANCH C WITH(NOLOCK)
		ON C.BranchName = A.BranchName
	WHERE A.BranchName NOT IN ('422','475','476','477','478','479')

	UNION 

	SELECT
		'MAXICARE MOBILE VAN' AS BranchName,											
		A.ItemClass,											
		A.ConsideredAs,	
		SUM(ISNULL(A.AVAILMENTS_COUNT_F,0)) AS AVAILMENTS_COUNT_F,	
		SUM(ISNULL(A.AVAILMENTS_COUNT_A,0)) AS AVAILMENTS_COUNT_A,
		SUM(ISNULL(A.AVAILMENTS_COUNT_NULL,0)) AS AVAILMENTS_COUNT_NULL,	
		SUM(ISNULL(A.AVAILERS_COUNT_F,0)) AS AVAILERS_COUNT_F,	
		SUM(ISNULL(A.AVAILERS_COUNT_A,0)) AS AVAILERS_COUNT_A,
		SUM(ISNULL(A.AVAILERS_COUNT_NULL,0)) AS AVAILERS_COUNT_NULL,	
		SUM(ISNULL(A.CENSUS_INC,0)) AS CENSUS_INC,											
		SUM(ISNULL(A.CENSUS_EXC,0)) AS CENSUS_EXC,	
		SUM(A.WKTARGET_CENSUS) AS FREQUENCY_TARGET,						
		SUM(ISNULL(B.ACTUAL_CAPACITY,0)) AS ACTUAL_CAPACITY,
		SUM(ISNULL(A.DAILY_CAPACITY,0)) AS MAX_CAPACITY,						
		AVG(ISNULL(A.DAILY_CAPACITY_PERCENT,0)) AS AVG_ACTUAL_BASED_ON_MAX_CAP_PERCENT,
		SUM(ISNULL(A.TOTAL_MYH_RATE_INC_MTD,0)) AS TOTAL_MYH_RATE_INC_MTD,								
		SUM(ISNULL(A.TOTAL_MYH_RATE_PRIMA,0)) AS TOTAL_MYH_RATE_PRIMA,										
		SUM(ISNULL(A.TOTAL_MYH_RATE_EXC_MTD,0)) AS TOTAL_MYH_RATE_EXC_MTD,									
		SUM(ISNULL(A.TOTAL_NEARBY_RATE_INC_MTD,0)) AS TOTAL_NEARBY_RATE_INC_MTD,
		SUM(ISNULL(A.TOTAL_NEARBY_RATE_PRIMA,0)) AS TOTAL_NEARBY_RATE_PRIMA,									
		SUM(ISNULL(A.TOTAL_NEARBY_RATE_EXC_MTD,0)) AS TOTAL_NEARBY_RATE_EXC_MTD,							
		SUM(ISNULL(A.TOTAL_COST_WITHOUT_MARKUP_INC_MTD,0)) AS TOTAL_COST_WITHOUT_MARKUP_INC_MTD,
		SUM(ISNULL(A.TOTAL_COST_WITHOUT_MARKUP_PRIMA,0)) AS TOTAL_COST_WITHOUT_MARKUP_PRIMA,
		SUM(ISNULL(A.TOTAL_COST_WITHOUT_MARKUP_EXC_MTD,0)) AS TOTAL_COST_WITHOUT_MARKUP_EXC_MTD,
		A.NOOFDAYS,
		A.MONTH_NAME,
		@CURRDAY AS CURRENT_DAY,
		A.HEADER AS CURRWKHEADER,
		@MONTHRANGE AS MTHEADER,
		@DATETODAY AS DATE_TODAY,
		A.WEEK_COUNT,
		A.REPORT_YEAR
		,GETDATE() AS SYSTEMDATE
	FROM #TEMP_DATA_PRE A WITH(NOLOCK)
	LEFT JOIN #TEMP_ACTUAL_CAPACITY B WITH(NOLOCK)
		ON B.BranchName = A.BranchName
		AND B.ItemClass = A.ItemClass
	INNER JOIN #TEMP_BRANCH C WITH(NOLOCK)
		ON C.BranchName = A.BranchName
	WHERE A.BranchName IN ('422','475','476','477','478','479')
	GROUP BY
    A.ItemClass,
    A.ConsideredAs,
    A.NOOFDAYS,
    A.MONTH_NAME,
    A.HEADER,
    A.WEEK_COUNT,
    A.REPORT_YEAR

	SELECT
	BRANCHNAME
	,ITEMCLASS
	,CONSIDEREDAS
	,AVAILMENTS_CENSUS_FULLRISK
	,AVAILMENTS_CENSUS_ASO
	,AVAILMENTS_CENSUS_NULL
	,AVAILERS_CENSUS_FULLRISK
	,AVAILERS_CENSUS_ASO
	,AVAILERS_CENSUS_NULL
	,CENSUS_INC
	,CENSUS_EXC
	,FREQUENCY_TARGET
	,ACTUAL_CAPACITY
	,MAX_CAPACITY
	,ACTUAL_BASED_ON_MAX_CAP_PERCENT
	,TOTAL_MYH_RATE_INC_MTD					,TOTAL_MYH_RATE_PRIMA
	,TOTAL_MYH_RATE_EXC_MTD					,TOTAL_NEARBY_RATE_INC_MTD					,TOTAL_NEARBY_RATE_PRIMA
	,TOTAL_NEARBY_RATE_EXC_MTD
	,TOTAL_COST_WITHOUT_MARKUP_INC_MTD
	,TOTAL_COST_WITHOUT_MARKUP_PRIMA
	,TOTAL_COST_WITHOUT_MARKUP_EXC_MTD
	,NOOFDAYS
	,MONTH_NAME
	,CURRENT_DAY
	,CURRWKHEADER
	,MTD_HEADER
	,DATE_TODAY
	,WEEK_COUNT
	,REPORT_YEAR
	FROM #TBL_MHSI_Census_Daily_Report_Summary WITH(NOLOCK)
	--WHERE CONVERT(DATE,SYSTEMDATE) = @DATETODAY
END
